Metadati tabella PrdAna campo Tab2 Script QT:
@0$ = "IMBALLI"
ShowQT PrdFormTabGet{0}


Insert [MixTab] (TabID, ItemID, ItemDes, ItemDefault, ItemHide)
Values ('PrdTabUso',2,'IMBALLO',0,0)

-------------------------------------------------------------------------------------------------------------------------
Modulo PrdFormAll. Indice 4.
-------------------------------------------------------------------------------------------------------------------------
Pers: 1

SQL:
Select '' As buttonOpen,  
	A.TabCod, LinNum, A.ItemID,
	PrdAdd, Peso, ItemDes
From dbo.[PrdFormTabLin] A
Left Join dbo.[PrdFormTabLinEx_Pers] B On A.TabCod = B.TabCod And A.ItemID = B.ItemID
Where (1=1)
Order By TabCod, ItemID

Script Dati:
<updatecommand>
<![CDATA[
UPDATE dbo.[PrdFormTabLin] SET
	TabCod = '{TabCod}',
	LinNum = {LinNum},
	ItemID = '{ItemID}',
	ItemDes = '{ItemDes}',
	PrdAdd = '{PrdAdd}'
WHERE TabCod = '{original_TabCod}' And ItemID = '{original_ItemID}'
MERGE dbo.[PrdFormTabLinEx_Pers] WITH(HOLDLOCK) AS T
USING (VALUES ({Peso}))
    AS S (Peso)
    ON T.TabCod = '{original_TabCod}' And T.ItemID = '{original_ItemID}'
WHEN MATCHED THEN
    UPDATE
    SET Peso = S.Peso
WHEN NOT MATCHED THEN
INSERT (
	TabCod, ItemID, Peso
	)
VALUES (
	'{original_TabCod}', '{original_ItemID}', S.Peso
	);
]]>
</updatecommand>
<deletecommand>
<![CDATA[
DELETE dbo.[PrdFormTabLin]
WHERE TabCod = '{original_TabCod}' And ItemID = '{original_ItemID}'
DELETE FROM dbo.[PrdFormTabLinEx_Pers]
WHERE TabCod = '{original_TabCod}' And ItemID = '{original_ItemID}'
]]>
</deletecommand>
<datacommandkey>
<![CDATA[
TabCod, ItemID
]]>
</datacommandkey>
<insertcommand>
<![CDATA[
INSERT dbo.[PrdFormTabLin](
	TabCod,
	LinNum,
	ItemID,
	ItemDes,
	PrdAdd
	)
VALUES (
	'{TabCod}',
	{LinNum},
	'{ItemID}',
	'{ItemDes}',
	'{PrdAdd}'
	)
INSERT dbo.[PrdFormTabLinEx_Pers](
	TabCod,
	ItemID,
	Peso
	)
VALUES (
	'{TabCod}',
	'{ItemID}',
	{Peso}
	)
]]>
</insertcommand>

-------------------------------------------------------------------------------------------------------------------------
Modulo PrdFormLinDrop. Indice 0.
-------------------------------------------------------------------------------------------------------------------------
Pers: 1

SQL:
Select A.TabCod, LinNum, A.ItemID,
		ItemDes, Peso, PrdAdd
From dbo.[PrdFormTabLin] A
Left Join dbo.[PrdFormTabLinEx_Pers] B On A.TabCod = B.TabCod And A.ItemID = B.ItemID
Where (1=1)
	And A.TabCod = '{0}'
Order By LinNum

Script Dati:
<updatecommand>
<![CDATA[
UPDATE dbo.[PrdFormTabLin] SET
	TabCod = '{0}',
	LinNum = {LinNum},
	ItemID = '{ItemID}',
	ItemDes = '{ItemDes}',
	PrdAdd = '{PrdAdd}'
WHERE TabCod = '{0}' And ItemID = '{original_ItemID}'
MERGE dbo.[PrdFormTabLinEx_Pers] WITH(HOLDLOCK) AS T
USING (VALUES ({Peso}))
    AS S (Peso)
    ON T.TabCod = '{0}' And T.ItemID = '{original_ItemID}'
WHEN MATCHED THEN
    UPDATE
    SET Peso = S.Peso
WHEN NOT MATCHED THEN
INSERT (
	TabCod, ItemID, Peso
	)
VALUES (
	'{0}', '{original_ItemID}', S.Peso
	);
]]>
</updatecommand>
<deletecommand>
<![CDATA[
DELETE dbo.[PrdFormTabLin]
WHERE TabCod = '{0}' And ItemID = '{original_ItemID}'
DELETE FROM dbo.[PrdFormTabLinEx_Pers]
WHERE TabCod = '{0}' And ItemID = '{original_ItemID}'
]]>
</deletecommand>
<datacommandkey>
<![CDATA[
TabCod, ItemID
]]>
</datacommandkey>
<insertcommand>
<![CDATA[
INSERT dbo.[PrdFormTabLin](
	TabCod,
	LinNum,
	ItemID,
	ItemDes,
	PrdAdd
	)
VALUES (
	'{0}',
	{LinNum},
	'{ItemID}',
	'{ItemDes}',
	'{PrdAdd}'
	)
INSERT dbo.[PrdFormTabLinEx_Pers](
	TabCod,
	ItemID,
	Peso
	)
VALUES (
	'{0}',
	'{ItemID}',
	{Peso}
	)
]]>
</insertcommand>

-------------------------------------------------------------------------------------------------------------------------
Modulo PrdFormTab{0}. Indice 1.
-------------------------------------------------------------------------------------------------------------------------
Pers: 1

SQL:
Select
	A.TabCod, LinNum, A.ItemID,
	PrdAdd,
	'' As buttonLocalize,
	Peso,
	ItemDes
From dbo.[PrdFormTabLin] A
Left Join dbo.[PrdFormTabLinEx_Pers] B On A.TabCod = B.TabCod And A.ItemID = B.ItemID
Where  A.TabCod = '{TabCod}'
Order By LinNum

Script Dati:
<datacommandkey>
<![CDATA[
TabCod, ItemID
]]>
</datacommandkey>
<insertcommand>
<![CDATA[
INSERT dbo.[PrdFormTabLin](
	TabCod,
	LinNum,
	ItemID,
	ItemDes,
	PrdAdd
	)
VALUES (
	'{TabCod}',
	{LinNum},
	'{ItemID}',
	'{ItemDes}',
	'{PrdAdd}'
	)
INSERT dbo.[PrdFormTabLinEx_Pers](
	TabCod,
	ItemID,
	Peso
	)
VALUES (
	'{TabCod}',
	'{ItemID}',
	{Peso}
	)
]]>
</insertcommand>
<updatecommand>
<![CDATA[
UPDATE dbo.[PrdFormTabLin] SET
	TabCod = '{TabCod}',
	LinNum = {LinNum},
	ItemID = '{ItemID}',
	ItemDes = '{ItemDes}',
	PrdAdd = '{PrdAdd}'
WHERE TabCod = '{TabCod}' And ItemID = '{original_ItemID}'
MERGE dbo.[PrdFormTabLinEx_Pers] WITH(HOLDLOCK) AS T
USING (VALUES ({Peso}))
    AS S (Peso)
    ON T.TabCod = '{TabCod}' And T.ItemID = '{original_ItemID}'
WHEN MATCHED THEN
    UPDATE
    SET Peso = S.Peso
WHEN NOT MATCHED THEN
INSERT (
	TabCod, ItemID, Peso
	)
VALUES (
	'{TabCod}', '{original_ItemID}', S.Peso
	);
]]>
</updatecommand>
<deletecommand>
<![CDATA[
DELETE dbo.[PrdFormTabLin]
WHERE TabCod = '{TabCod}' And ItemID = '{original_ItemID}'
DELETE FROM dbo.[PrdFormTabLinEx_Pers]
WHERE TabCod = '{TabCod}' And ItemID = '{original_ItemID}'
]]>
</deletecommand>

-------------------------------------------------------------------------------------------------------------------------
Modulo PrdFormTabGet{0}. Indice 0.
-------------------------------------------------------------------------------------------------------------------------
Pers: 1

Visualizzazione: 570,0,0,0,0,0,0,0,0,0,0,0,0,0,0,

SQL:
Select *
From dbo.[udfPrdFormTabLin_Pers]({(Session)}, '{0}')
Order By LinNum

-------------------------------------------------------------------------------------------------------------------------
Modulo di dialogo 110.
-------------------------------------------------------------------------------------------------------------------------
Pers: 1

Script OnOpen:
DOPO:
	SpBolli = DbRead("dbo.[uspDD_charge_export]", "", sDataValues$)
EndIf

AGGIUNGERE:
'INIZIO PERS M2SISTEMI Elia
DataHide("AnaCod$,DsmCod$,DocTip,Uniq,SpRiba,PesoPallet,16,17,37,38")
If InStr(",15,16,17,25,26,30,", sDocTip$) Then
	bDone = True
	DataShow("SpRiba")
	DataHide("31,36,ShipPayCod$,TrMezzo,VetCod$,VetCod2$,TrPorto,SendWay$,Info6$,ShipCod$,VetComp,Colli,AspBeni$,Imballo$,Peso,PesoNetto,Volume,DtaRitM$,OraRitM$")
	chkShow = 0
	FormSize(0, 500, -1, -1)
ElseIf InStr(",14,23,24,", sDocTip$) Then
	bDone = True
	DataShow("16,17,37,38")
	chkShow = 1
	FormSize(0, 720, -1, -1)
EndIf
'FINE PERS M2SISTEMI Elia

-------------------------------------------------------------------------------------------------------------------------
Modulo di dialogo 110. Dettaglio campi.
-------------------------------------------------------------------------------------------------------------------------
Indice 2: Posizione: 2
Indice 5: Posizione: 5
Indice 10: Posizione: 10
Indice 11: Posizione: 11
Indice 12: Posizione: 12
Indice 13: Posizione: 13
Indice 14: Posizione: 14
Indice 15: Posizione: 15
Indice 16: Posizione: 16
Indice 20: Posizione: 20
Indice 21: Posizione: 21
Indice 22: Posizione: 22
Indice 23: Posizione: 23
Indice 24: Posizione: 24
Indice 25: Posizione: 25
Indice 26: Posizione: 26
Indice 27: Posizione: 27
Indice 28: Posizione: 28
Indice 30: Posizione: 30
Indice 31: Posizione: 31

Indice 32: Posizione: 32
Script:
#
MouseWait(True)

If AspBeni$ = "PALLETS" Then
	DataShow("PesoPallet")
	DataFocus("PesoPallet")
Else
	DataHide("PesoPallet")
EndIf

Dim Tara = 0
PesoNetto = DbRead("Select dbo.[udfCliDoc_PesoNetto_Pers](" & DocInfoGet("formdocuniq") & ")", "")
Tara = DbRead("Select dbo.[udfCliDoc_Tara_Pers](" & DocInfoGet("formdocuniq") & ")", "")
If AspBeni$ = "PALLETS" And PesoPallet > 0 Then
	Tara = Tara + PesoPallet
End If
Peso = Tara + PesoNetto

MouseWait(False)

Indice 39: 
Posizione: 33
Descrizione: Peso pallet 
Valore: 19
T.Edit.: 23
N.Caratt.: 13
Nullo: 1
Variabile: PesoPallet

Indice 33: Posizione: 34

Indice 34: 
Posizione: 35
Valore:
%
Dim p1 = DbRead("Select dbo.[udfCliDoc_PesoNetto_Pers](" & DocInfoGet("formdocuniq") & ")", "")
Dim p2 = DbRead("Select dbo.[udfCliDoc_Tara_Pers](" & DocInfoGet("formdocuniq") & ")", "")
Return p1 + p2

T.Edit.: 23

Indice 35: 
Posizione: 36
Valore:
%
Return DbRead("Select dbo.[udfCliDoc_PesoNetto_Pers](" & DocInfoGet("formdocuniq") & ")", "")

T.Edit.: 23

Indice 36: Posizione: 37
Indice 37: Posizione: 38
Indice 38: Posizione: 39
Indice 40: Posizione: 40
Indice 41: Posizione: 41
Indice 42: Posizione: 42
Indice 43: Posizione: 43
Indice 44: Posizione: 44
Indice 45: Posizione: 45
Indice 46: Posizione: 46
Indice 50: Posizione: 50
Indice 51: Posizione: 51
Indice 52: Posizione: 52
Indice 53: Posizione: 53
Indice 54: Posizione: 54

-------------------------------------------------------------------------------------------------------------------------
Modulo di dialogo 110. Comandi aggiuntivi.
-------------------------------------------------------------------------------------------------------------------------
Indice 37:
Allineam. orizzontale: 2
Allineam. verticale: 1

Indice 38:
Tipo: 1
Descrizione: Ricalcola peso
Script:
MouseWait(True)
Dim Tara = 0
PesoNetto = DbRead("Select dbo.[udfCliDoc_PesoNetto_Pers](" & DocInfoGet("formdocuniq") & ")", "")
Tara = DbRead("Select dbo.[udfCliDoc_Tara_Pers](" & DocInfoGet("formdocuniq") & ")", "")
If AspBeni$ = "PALLETS" And PesoPallet > 0 Then
	Tara = Tara + PesoPallet
End If
Peso = Tara + PesoNetto

MouseWait(False)
DataFocus("Peso")

Allineam. orizzontale: 2
Allineam. verticale: 1
Altezza (18 px): 25