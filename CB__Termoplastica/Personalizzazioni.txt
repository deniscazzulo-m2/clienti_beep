Form docOP{0} Indice 0 -> Script Dati -> Layout
---------------------------------------------------------------------------------------
DataHide("*")
DataShow("buttonPlus,LinStatSigla,LinNum,PrzAcq,PrdCod,PrdDes,PrdUm,PrdQta,PrdPrz,PrdSc,PrdPrz2,PrdAdd,TotPrz2,LinRif,LinType,IvaCod,IvaAlq,PrvAlq,PrvAgeCod,CptVnd,PrzLstCod,PrzLst")
---------------------------------------------------------------------------------------
Form docOP{0} Indice 0 -> SQL
---------------------------------------------------------------------------------------
Select
	LinNum,
	dbo.[udfDD_LinStat_sigla](LinStat) As LinStatSigla,
	dbo.[udfDD_LinStat_style](LinStat) As LinStatStyle,
	LinStat,
	LinLavStadio,
	LinStatFrom,
	LinSaldo,
	QtaEvs,
	QtaEvs2,
	LinOmg,
	'' As buttonPlus,
	PrdCod,
	PrdCod2,
	ForCod,
	PrdForCod,
	PrdParams,
	PrdSerial,
	PrdLotto,
	PrdDtaMake,
	PrdDtaCns,
	PrdDes,
	PrdUm2,
	QtaUm2,
	PrdQtaCnsNow,
	PrdUm,
	PrdQta,
	PrdQta2,
	PrdPrz,
	PrdSc,
	PrdPrz2,
	PrzAcq,
	PrdAdd,
	TotPrz2,
	LinRif,
	LinType,
	IvaCod,
	IvaAlq,
	PrvAlq,
	PrvAgeCod,
	CptCnt,
	CdcModel,
	CdcCommessa,
	PrzLstCod,
	PrzLst,
	TotPrz,
	TotPrz2C,
	TotPrz2S,
	TotDivisaP,
	TotQta2,
	Info,
	InfoExt,
	PrdUso,
	Tm,
	TmCalc,
	LinMP,
	LinRistFrom,
	DocTipFrom,
	UniqFrom,
	UniqStp,
	UniqStpGrp,
	UniqStpDta,
	UniqLinFrom,
	MustSpool,
	ElabNum,
	ElabLavNum,
	SpedMagMoved,
	FormCod,
	DibaCod,
	OffCod,
	OffQta,
	OffMinFt,
	OffMinFt1,
	OffMinFt2,
	OffPrvFix,
	Uniq,
	UniqDoc,
	Uniq2,
	UniqDoc2,
	RowCreate,
	RowUserID,
	RowChange,
	RowChangeUserID,
	RowLocked,
	RowPrinted
From
	dbo.[{TableLin}]
Where
	UniqDoc = (0)
Order By
	LinNum
---------------------------------------------------------------------------------------
Form docOC{0} Indice 0 -> Script Dati -> Layout
---------------------------------------------------------------------------------------
DataHide("*")
DataShow("buttonPlus,LinStatSigla,LinNum,PrdCod,PrdDes,PrdUm,PrdQta,PrdPrz,PrdSc,PrdPrz2,PrzAcq,PrdAdd,TotPrz2,LinRif,LinType,IvaCod,IvaAlq,PrvAlq,PrvAgeCod,CptVnd,PrzLstCod,PrzLst")
DataVisible((AppInfoGet("2027") = "1"), "PrdDtaCns")
---------------------------------------------------------------------------------------
Form docOC{0} Indice 0 -> SQL
---------------------------------------------------------------------------------------
Select
	LinNum,
	dbo.[udfDD_LinStat_sigla](LinStat) As LinStatSigla,
	dbo.[udfDD_LinStat_style](LinStat) As LinStatStyle,
	LinStat,
	LinLavStadio,
	LinStatFrom,
	LinSaldo,
	QtaEvs,
	QtaEvs2,
	LinOmg,
	'' As buttonPlus,
	PrdCod,
	PrdCod2,
	ForCod,
	PrdForCod,
	PrdParams,
	PrdSerial,
	PrdLotto,
	PrdDtaMake,
	PrdDtaCns,
	PrdDes,
	PrdUm2,
	QtaUm2,
	PrdQtaCnsNow,
	PrdUm,
	PrdQta,
	PrdQta2,
	PrdPrz,
	PrdSc,
	PrdPrz2,
	PrzAcq,
	PrdAdd,
	TotPrz2,
	LinRif,
	LinType,
	IvaCod,
	IvaAlq,
	PrvAlq,
	PrvAgeCod,
	CptCnt,
	CdcModel,
	CdcCommessa,
	PrzLstCod,
	PrzLst,
	TotPrz,
	TotPrz2C,
	TotPrz2S,
	TotDivisaP,
	TotQta2,
	Info,
	InfoExt,
	PrdUso,
	Tm,
	TmCalc,
	LinMP,
	LinRistFrom,
	DocTipFrom,
	UniqFrom,
	UniqStp,
	UniqStpGrp,
	UniqStpDta,
	UniqLinFrom,
	MustSpool,
	ElabNum,
	ElabLavNum,
	SpedMagMoved,
	FormCod,
	DibaCod,
	OffCod,
	OffQta,
	OffMinFt,
	OffMinFt1,
	OffMinFt2,
	OffPrvFix,
	Uniq,
	UniqDoc,
	Uniq2,
	UniqDoc2,
	RowCreate,
	RowUserID,
	RowChange,
	RowChangeUserID,
	RowLocked,
	RowPrinted
From
	dbo.[{TableLin}]
Where
	UniqDoc = (0)
Order By
	LinNum
---------------------------------------------------------------------------------------
Form docBO{0} Indice 0 -> Script Dati -> Layout
---------------------------------------------------------------------------------------
DataHide("*")
DataShow("buttonPlus,LinNum,LinSaldo,PrdCod,PrdDes,PrdUm,PrdQta,PrdPrz,PrdSc,PrdPrz2,PrzAcq,PrdAdd,TotPrz2,LinRif,LinType,IvaCod,IvaAlq,PrvAlq,PrvAgeCod,CptVnd,PrzLstCod,PrzLst,PrdGrp")
---------------------------------------------------------------------------------------
Form docBO{0} Indice 0 -> SQL
---------------------------------------------------------------------------------------
Select
	P.LinNum,
	dbo.[udfDD_LinStat_sigla](P.LinStat) As LinStatSigla,
	dbo.[udfDD_LinStat_style](P.LinStat) As LinStatStyle,
	P.LinStat,
	P.LinLavStadio,
	P.LinStatFrom,
	P.LinSaldo,
	P.QtaEvs,
	P.QtaEvs2,
	P.LinOmg,
	'' As buttonPlus,
	P.PrdCod,
	P.PrdCod2,
	P.ForCod,
	P.PrdForCod,
	P.PrdParams,
	P.PrdSerial,
	P.PrdLotto,
	P.PrdDtaMake,
	P.PrdDtaCns,
	P.PrdDes,
	'PrdGrp' = (Select Top 1 ZP.GrpCod From dbo.[PrdAna] ZP Where ZP.PrdCod = P.PrdCod),
	P.PrdUm2,
	P.QtaUm2,
	P.PrdQtaCnsNow,
	P.PrdUm,
	P.PrdQta,
	P.PrdQta2,
	P.PrdPrz,
	P.PrdSc,
	P.PrdPrz2,
	P.PrzAcq,
	P.PrdAdd,
	P.TotPrz2,
	P.LinRif,
	P.LinType,
	P.IvaCod,
	P.IvaAlq,
	P.PrvAlq,
	P.PrvAgeCod,
	P.CptCnt,
	P.CdcModel,
	P.CdcCommessa,
	P.PrzLstCod,
	P.PrzLst,
	P.TotPrz,
	P.TotPrz2C,
	P.TotPrz2S,
	P.TotDivisaP,
	P.TotQta2,
	P.Info,
	P.InfoExt,
	P.PrdUso,
	P.Tm,
	P.TmCalc,
	P.LinMP,
	P.LinRistFrom,
	P.DocTipFrom,
	P.UniqFrom,
	P.UniqStp,
	P.UniqStpGrp,
	P.UniqStpDta,
	P.UniqLinFrom,
	P.MustSpool,
	P.ElabNum,
	P.ElabLavNum,
	P.SpedMagMoved,
	P.FormCod,
	P.DibaCod,
	P.OffCod,
	P.OffQta,
	P.OffMinFt,
	P.OffMinFt1,
	P.OffMinFt2,
	P.OffPrvFix,
	P.Uniq,
	P.UniqDoc,
	P.Uniq2,
	P.UniqDoc2,
	P.RowCreate,
	P.RowUserID,
	P.RowChange,
	P.RowChangeUserID,
	P.RowLocked,
	P.RowPrinted
From
	dbo.[{TableLin}] P
Where
	P.UniqDoc = (0)
Order By
	P.LinNum
---------------------------------------------------------------------------------------
Form docBO{0} Indice 0 -> Layout
---------------------------------------------------------------------------------------
buttonPlus: [# _191919-16_icons8-add-16.png § ... § Dati collegati ...],30,B10100,V,-M,A111,CF-657931,CB-657931
PrdCod2: [Codice digitato],100,V,-M,-E,-T,G
PrdParams: B10000,-V,-M,-E,-T,A0
PrdCod: 120,V,-M,E,-T,CB-1828
PrdPrz: B10000,V,-M,E,-T,A212,CB-983056
PrdPrz2: B10000,V,-M,-E,-T,A212,CB-983056
TotPrz2: V,-M,-E,A212,CB-983056
LinStatSigla: [St.],30,V,-M,-E,-T,A111,F100
PrdGrp: [Gruppo],50,V,-M,-E,-T
---------------------------------------------------------------------------------------
Moduli di Dialogo 6212, 6214, 6232 
-> Altezza 750
---------------------------------------------------------------------------------------
Modulo PrdAnaAll Indice 8. SQL
---------------------------------------------------------------------------------------
Select P.PrdCod, 'PrdDes' = (
        Select Top 1 ZP.PrdDes
        From dbo.[PrdAna] ZP
        Where
            ZP.PrdCod = P.PrdCod
            And IsNull(ZP.PrdHide, 0) = 0
    ),
    'GrpCod' = (
        Select Top 1 ZP.GrpCod
        From dbo.[PrdAna] ZP
        Where
            ZP.PrdCod = P.PrdCod
            And IsNull(ZP.PrdHide, 0) = 0
    ),
    P.LstCod,
    P.Mis1,
    P.Mis2,
    P.PrdPrz,
    P.PrdQtaX,
    P.PrdPrzQtaX,
    P.Par1,
    P.Par2,
    P.Par3,
    P.Par4,
    P.Par5,
    P.ItemUpdate,
    P.ItemIndex
From dbo.[PrdPrz] P
Where (1 = 1)
Order By P.PrdCod, P.LstCod
---------------------------------------------------------------------------------------
Modulo PrdAnaAll Indice 8. Layout
---------------------------------------------------------------------------------------
PrdCod: 120,V,-M,-E,-T,A0,CB-1828
LstCod: 100,V,-M,-E,-T,A0,CB-16
Mis1: V,-M,-E,-T,A0,CB-983056
Mis2: V,-M,-E,-T,A0,CB-983056
Par1: V,-M,-E,-T,A0,CB-983056
Par2: V,-M,-E,-T,A0,CB-983056
Par3: V,-M,-E,-T,A0,CB-983056
PrdQtaX: V,-M,E,A212,G
PrdPrzQtaX: V,-M,E,A212,G
PrdDes: [Descrizione],200,V,-M,-E,-T
GrpCod: (MixPrdGrp),[Gruppo],60,V,-M,-E,-T
---------------------------------------------------------------------------------------
Modulo CliAna{0} Indice 0. SQL
---------------------------------------------------------------------------------------
Select '' As buttonOptions, 
	ItemID, 
	Cast(ItemUse As varchar(3)) As ItemUse, 
	ItemType, ItemDes, Loc, Pro, Reg, Naz, GrpCod, CatCod, PosArc
From dbo.[MixAna]
Where (1=1) 
	And ItemType = 1
	And ItemID Like '{0}'
Order By IsNumeric(ItemID) DESC, ItemID DESC
---------------------------------------------------------------------------------------
Modulo CliAna{0} Indice 0. Script eventi. Evento OnAddNew   
Aggiungere dopo:

ValueSet("ItemType", "1")
ValueSet("ItemUse", "10")
ValueSet("ItemAlert", "100")

Il Testo:

' M2 Inizio
ValueSet("Language", "ITA")
ValueSet("EmiFtRiep", "3")
ValueSet("EmiRbRiep", "1")
' M2 Fine
---------------------------------------------------------------------------------------
Modulo CliAnaTab Indice 0. SQL 
---------------------------------------------------------------------------------------
Select TabID, TabID2, ItemID, ItemID2, ItemDefault, ItemHide, ItemDes, ItemInfo
From dbo.[udfMixTab]('CliCat', '')
Where (1=1)
Order By ItemID ASC
---------------------------------------------------------------------------------------
Modulo ForAna{0} Indice 0. SQL
---------------------------------------------------------------------------------------
Select '' As buttonOptions, 
	ItemID, 
	Cast(ItemUse As varchar(3)) As ItemUse, 
	ItemType, ItemDes, Loc, Pro, Reg, Naz, GrpCod, CatCod, PosArc
From dbo.[MixAna]
Where (1=1) 
	And ItemType = 2
	And ItemID Like '{0}'
Order By ISNUMERIC(ItemID) DESC, Len(ItemID) DESC, ItemID DESC
---------------------------------------------------------------------------------------
Modulo MagMovInfo{0}{1} Indice 0. Layout
---------------------------------------------------------------------------------------
(grid): MR
PrdCod: [Codice prodotto],120,V,-M,-E,-T,A0,CB-1828
PrdDes: [Descrizione prodotto],300,V,-M,-E,-T,A0
GrpCod: [Gruppo],100,V,-M,-E,-T,A111
GrpDes: [Descrizione gruppo],250,V,-M,-E,-T,A0
CatCod: [Categoria],100,V,-M,-E,-T,A111
CatDes: [Descrizione categoria],60,V,-M,-E,-T,A0
MagQta: [Esistenza],D46,V,-M,-E,-T,A2,CB-983056
MagCod: [Magazzino],120,V,-M,-E,-T,A0
---------------------------------------------------------------------------------------
Modulo PrdAnaTab Indice 0. Layout
---------------------------------------------------------------------------------------
ItemID: V,-M,E,A0,CB-1828
TabID2: -V,-M,-E,-T,A0
ItemDefault: V,-M,E,-T,A1
ItemDes: 360,V,-M,E,-T,A0
ItemInfo: (CntGrp2),[Controp. Vend.],360,V,-M,E,-T,A0
ItemHide: V,-M,E,-T,A1
ItemID2: -V
---------------------------------------------------------------------------------------
Modulo PrdAnaTab Indice 0. Script eventi. Evento OnUpdate
---------------------------------------------------------------------------------------
Dim sAQuery$ = ""
Dim sItemInfo$ = ValueGet("ItemInfo")
Dim sItemID$ = ValueGet("ItemID")

sAQuery$ = "Update A Set A.CptVnd = '" & Replace(sItemInfo$, "'", "''") & "' From dbo.[PrdAna] A Where A.GrpCod = '" & Replace(sItemID$, "'", "''") & "'"

If MsgYN("Procedere con l'aggiornamento del conto per tutti i prodotti collegati al gruppo " & sItemID$ & "?", 0) <> 0 Then
	DbExecute(sAQuery$)
Else
	STOP
EndIf
---------------------------------------------------------------------------------------
Modulo PrdPrzList Indice 0. SQL
---------------------------------------------------------------------------------------
Select B.PrdDes, B.GrpCod, A.*
From dbo.[PrdPrz] A
Left Join dbo.[PrdAna] B On B.PrdCod = A.PrdCod
Where (1=1)
	And IsNull(B.PrzTab, 0) = 0
---------------------------------------------------------------------------------------
Modulo PrdPrzListPromo Indice 0. SQL
---------------------------------------------------------------------------------------
Select
	  VP.RowID
	, VP.CliCod
	, ANA.ItemDes As AnaDes
	, ANA.catCod As AnaCat
	, VP.CliCat
	, VP.PrdCod
	, PRD.PrdDes
	, Right('0000'+IsNull(VP.GrpCod, ''), 4) as GrpCodPadded
	, VP.GrpCod
	, VP.CatCod
	, VP.TreeCod
	, VP.PrdQta
	, VP.LstCodOnly
	, VP.LstCodPrice
	, VP.NxN
	, VP.PrdSc
	, VP.PrdPrz
	, VP.PrvAlq
	, VP.DtaStart
	, VP.DtaEnd
	, VP.ItemInfo
From dbo.[VndPro] VP
Left Join dbo.[PrdAna] PRD On PRD.PrdCod = VP.PrdCod
Left Join dbo.[MixAna] ANA On ANA.ItemID = VP.CliCod And ANA.ItemType = 1
Order By VP.CliCod DESC, VP.DtaStart, VP.DtaEnd
---------------------------------------------------------------------------------------
Modulo PrdPrzListPromo Indice 0. Layout
---------------------------------------------------------------------------------------
(grid): MR
CliCod: V,-M,E,-T,A0,CB-1828
CliCat: V,-M,E,-T,A0,CB-983056
PrdCod: V,-M,E,-T,A0,CB-1828
GrpCod: [Gruppo prodotto],D20,V,-M,E,-T,A0,CB-983056
PrdSc: D63,V,-M,E,-T,A0,CB-983056
PrdPrz: D41,V,-M,E,-T,A0,CB-1828
TreeCod: [Classificazione prodotto],V,-M,E,-T,A0
NxN: 40,V,-M,E,-T,A111
PrdDes: [Descrizione prodotto],240,V,-M,-E,-T,A311,G
AnaDes: [Nominativo cliente],240,V,-M,-E,-T,A311,G
ItemInfo: 60,V,-M,E,-T,A0
GrpCodPadded: [Ordinamento gruppo],V,-M,-E,-T,A0
AnaCat: [Cadegoria di Apartenenza],V,-M,-E,A0
---------------------------------------------------------------------------------------
Modulo VenditeDoc Indice 0. Layout
---------------------------------------------------------------------------------------
buttonPlus: [# _191919-16_icons8-add-16.png § DETT § Dati collegati],50,B10100,V,-M,A111,CF-657931,CB-657931
buttonOpen: [# OpenSelectedItemHS.png § Apri DOC § Apri documento],50,B10100,V,-M,A111,CF-657931,CB-657931
DocTot: D50,V,-M,-E,T,A212,F100,CB-1644806
DocImp: D50,V,-M,-E,T,A212,CB-1644806
DocIva: D50,V,-M,-E,T,A212,CB-1644806
DocOmg: D50,V,-M,-E,T,A212,CB-1644806
DocMerce: D50,V,-M,-E,T,A212,CB-1644806
DocSconti: D50,V,-M,-E,T,A212,CB-1644806
DocSpese: D50,V,-M,-E,T,A212,CB-1644806
NumCod: D1,V,M,-E,-T,A111,G
Numero: D20,V,-M,-E,-T,A212,G
DocDta: D10,V,M,-E,-T,A111
DocYear: [Anno],D32,40,V,M,-E,A111,CB-1828
DocMonth: [Mese],D31,36,V,M,-E,A111,CB-1828
AnaCod: V,-M,-E,A0,CB-1828
DocTip: -V,-M,-E,A0
DsmCod: [Dest. merce],V,-M,-E,A111
Divisa: V,M,-E,A111
ItemDesShort: -V,-M,-E,-T
AnaCod: 50,V,-M,-E,-T,CB-1828
NumCod: 35,V,-M,-E,-T
---------------------------------------------------------------------------------------
Modulo VenditeDoc Indice 1. Layout
---------------------------------------------------------------------------------------
buttonPlus: [# _191919-16_icons8-add-16.png § DETT § Dati collegati],50,B10100,V,-M,A111,CF-657931,CB-657931
buttonOpen: [# OpenSelectedItemHS.png § Apri DOC § Apri documento],50,B10100,V,-M,A111,CF-657931,CB-657931
DocTot: D50,V,-M,-E,T,A212,F100,CB-1644806
DocImp: D50,V,-M,-E,T,A212,CB-1644806
DocIva: D50,V,-M,-E,T,A212,CB-1644806
DocOmg: D50,V,-M,-E,T,A212,CB-1644806
DocMerce: D50,V,-M,-E,T,A212,CB-1644806
DocSconti: D50,V,-M,-E,T,A212,CB-1644806
DocSpese: D50,V,-M,-E,T,A212,CB-1644806
NumCod: D1,V,M,-E,-T,A111,G
Numero: D20,V,-M,-E,-T,A212,G
DocDta: D10,V,M,-E,-T,A111
DocYear: [Anno],D32,40,V,M,-E,A111,CB-1828
DocMonth: [Mese],D31,36,V,M,-E,A111,CB-1828
AnaCod: V,-M,-E,A0,CB-1828
DocTip: -V,-M,-E,A0
DsmCod: [Dest. merce],V,-M,-E,A111
Divisa: V,M,-E,A111
ItemDesShort: -V,-M,-E,-T
AnaCod: 50,V,-M,-E,-T,CB-1828
NumCod: 35,V,-M,-E,-T
---------------------------------------------------------------------------------------
Modulo VenditeDoc Indice 2. Layout
---------------------------------------------------------------------------------------
buttonPlus: [# _191919-16_icons8-add-16.png § DETT § Dati collegati],D97,50,B10100,V,-M,-T,A111,CF-657931,CB-657931
buttonOpen: [# OpenSelectedItemHS.png § Apri DOC § Apri documento],D97,50,B10100,V,-M,-T,A111,CF-657931,CB-657931
DocTot: D50,V,-M,-E,T,A212,F100,CB-1644806
DocImp: D50,V,-M,-E,T,A212,CB-1644806
DocIva: D50,V,-M,-E,T,A212,CB-1644806
DocOmg: D50,V,-M,-E,T,A212,CB-1644806
DocMerce: D50,V,-M,-E,T,A212,CB-1644806
DocSconti: D50,V,-M,-E,T,A212,CB-1644806
DocSpese: D50,V,-M,-E,T,A212,CB-1644806
NumCod: [Codice numeraz.],D1,V,M,-E,-T,A111,G
Numero: [N° progress.],D20,V,-M,-E,-T,A212,G
DocDta: D10,V,M,-E,-T,A111
DocYear: [Anno],D32,40,V,M,-E,-T,A111,CB-1828
DocMonth: [Mese],D31,36,V,M,-E,-T,A111,CB-1828
AnaCod: V,-M,-E,-T,A0,CB-1828
DocTip: -V,-M,-E,-T,A0
DsmCod: [Dest. merce],V,-M,-E,-T,A111
Divisa: V,M,-E,-T,A111
ShipPayCod: -V,-M,-E,-T,A111,CB-4139
TrMezzo: -V,-M,-E,-T,A111,CB-4139
VetCod: -V,-M,-E,-T,A0,CB-4139
VetCod2: -V,-M,-E,-T,A0,CB-4139
TrPorto: -V,-M,-E,-T,A11,CB-4139
SendWay: -V,-M,-E,-T,A0,CB-4139
ShipCod: -V,-M,-E,-T,A0,CB-4139
Info6: -V,-M,-E,-T,A0,CB-4139
VetComp: D50,-V,-M,-E,-T,A212,CB-4139
Colli: D20,-V,-M,-E,-T,A212,CB-4139
AspBeni: -V,-M,-E,-T,A0,CB-4139
Imballo: -V,-M,-E,-T,A0,CB-4139
Peso: D23,-V,-M,-E,-T,A212,CB-4139
PesoNetto: D23,-V,-M,-E,-T,A212,CB-4139
Volume: D23,-V,-M,-E,-T,A212,CB-4139
DtaRitM: D10,-V,-M,-E,-T,A111,CB-4139
OraRitM: D11,-V,-M,-E,-T,A111,CB-4139
ItemDesShort: -V,-M,-E,-T
AnaCod: 50,V,-M,-E,-T,CB-1828
NumCod: 35,V,-M,-E,-T
---------------------------------------------------------------------------------------
Modulo VenditeDoc Indice 3. Layout
---------------------------------------------------------------------------------------
buttonPlus: [# _191919-16_icons8-add-16.png § DETT § Dati collegati],D97,50,B10100,V,-M,-E,-T,A111,CF-657931,CB-657931
buttonOpen: [# OpenSelectedItemHS.png § Apri DOC § Apri documento],D97,50,B10100,V,-M,-E,-T,A111,CF-657931,CB-657931
DocTot: D50,V,-M,-E,T,A212,F100,CB-1644806
DocImp: D50,V,-M,-E,T,A212,CB-1644806
DocIva: D50,V,-M,-E,T,A212,CB-1644806
DocOmg: D50,V,-M,-E,T,A212,CB-1644806
DocMerce: D50,V,-M,-E,T,A212,CB-1644806
DocSconti: D50,V,-M,-E,T,A212,CB-1644806
DocSpese: D50,V,-M,-E,T,A212,CB-1644806
PrvTot: D50,V,-M,-E,T,A212,CB-1644806
NumCod: [Codice numeraz.],D1,V,M,-E,-T,A111,G
Numero: [N° progress.],D20,V,-M,-E,-T,A212,G
DocDta: D10,V,M,-E,-T,A111
DocYear: [Anno doc.],D32,50,V,M,-E,-T,A111,CB-1828
DocMonth: [Mese doc.],D31,50,V,M,-E,-T,A111,CB-1828
AnaCod: V,-M,-E,-T,A0,CB-1828
DocKind: [Genere],50,V,M,-E,-T,A111,G
DocTip: [Tipo doc.],40,V,M,-E,-T,A111,G
SegueFt: -V,-M,-E,-T,A0
DsmCod: [Dest. merce],V,-M,-E,-T,A111
Divisa: V,M,-E,-T,A111
CntRegDta: [Data registraz. contabile],D10,100,V,M,-E,-T,A111,CB-4139
CntRegDtaIVA: [Data competenza IVA],D10,100,V,M,-E,-T,A111,CB-4139
DocCntYear: [Anno registr. contab.],D32,60,V,M,-E,-T,A111,CB-4139
DocCntMonth: [Mese registr. contab.],D31,60,V,M,-E,-T,A111,CB-4139
DocCntIvaYear: [Anno compet. IVA],D32,60,V,M,-E,-T,A111,CB-4139
DocCntIvaMonth: [Mese compet. IVA],D31,60,V,M,-E,-T,A111,CB-4139
ItemDesShort: -V,-M,-E,-T
AnaCod: 50,V,-M,-E,-T,CB-1828
NumCod: 35,V,-M,-E,-T
---------------------------------------------------------------------------------------
Modulo VenditeDocSum Indice 7. SQL
---------------------------------------------------------------------------------------
Select
Max(B.ItemDes) As ItemDes, A.AnaCod As ItemID, A.AgeCod As AgeCod,
Year(DocDta) As Anno,
'TOT' = Sum(IsNull(DocMerce, 0)),
'M01' = Sum(Case When Month(DocDta) = 1 Then IsNull(DocMerce, 0)  Else NULL End),
'M02' = Sum(Case When Month(DocDta) = 2 Then IsNull(DocMerce, 0)  Else NULL End),
'M03' = Sum(Case When Month(DocDta) = 3 Then IsNull(DocMerce, 0)  Else NULL End),
'M04' = Sum(Case When Month(DocDta) = 4 Then IsNull(DocMerce, 0)  Else NULL End),
'M05' = Sum(Case When Month(DocDta) = 5 Then IsNull(DocMerce, 0)  Else NULL End),
'M06' = Sum(Case When Month(DocDta) = 6 Then IsNull(DocMerce, 0)  Else NULL End),
'M07' = Sum(Case When Month(DocDta) = 7 Then IsNull(DocMerce, 0)  Else NULL End),
'M08' = Sum(Case When Month(DocDta) = 8 Then IsNull(DocMerce, 0)  Else NULL End),
'M09' = Sum(Case When Month(DocDta) = 9 Then IsNull(DocMerce, 0)  Else NULL End),
'M10' = Sum(Case When Month(DocDta) = 10 Then IsNull(DocMerce, 0) Else NULL End),
'M11' = Sum(Case When Month(DocDta) = 11 Then IsNull(DocMerce, 0)  Else NULL End),
'M12' = Sum(Case When Month(DocDta) = 12 Then IsNull(DocMerce, 0) Else NULL End)
From dbo.[CliDoc] A
Left Join dbo.[MixAna] B On B.ItemID = A.AnaCod And B.ItemType = 1
Where A.DocTip In(15, 16, 17)
Group By A.AnaCod, A.AgeCod, Year(A.DocDta)
Order By A.AnaCod, A.AgeCod, Year(A.DocDta) DESC
---------------------------------------------------------------------------------------
Modulo VenditeDocSum Indice 7. Layout
---------------------------------------------------------------------------------------
ItemDes: [Nominativo],160,V,M,-E,-T,A0
ItemID: 50,V,M,-E,-T,A0
Anno: 50,V,-M,-E,-T,A111
TOT: [Totale],D50,80,V,-M,-E,-T,A212,F100
M01: [GEN],D50,80,V,-M,-E,-T,A212,CB-1644806
M02: [FEB],D50,80,V,-M,-E,-T,A212
M03: [MAR],D50,80,V,-M,-E,-T,A212,CB-1644806
M04: [APR],D50,80,V,-M,-E,-T,A212
M05: [MAG],D50,80,V,-M,-E,-T,A212,CB-1644806
M06: [GIU],D50,80,V,-M,-E,-T,A212
M07: [LUG],D50,80,V,-M,-E,-T,A212,CB-1644806
M08: [AGO],D50,80,V,-M,-E,-T,A212
M09: [SET],D50,80,V,-M,-E,-T,A212,CB-1644806
M10: [OTT],D50,80,V,-M,-E,-T,A212
M11: [NOV],D50,80,V,-M,-E,-T,A212,CB-1644806
M12: [DIC],D50,80,V,-M,-E,-T,A212
---------------------------------------------------------------------------------------
Modulo VenditeDocSum Indice 15. SQL
---------------------------------------------------------------------------------------
Select
    Max(B.ItemDes) As ItemDes,
    A.AgeCod As ItemID,
    Year(DocDta) As Anno,
    'TOT' = Sum(IsNull(DocMerce, 0)),
    'M01' = Sum(
        Case
            When Month(DocDta) = 1 Then IsNull(DocMerce, 0)
            Else NULL
        End
    ),
    'M02' = Sum(
        Case
            When Month(DocDta) = 2 Then IsNull(DocMerce, 0)
            Else NULL
        End
    ),
    'M03' = Sum(
        Case
            When Month(DocDta) = 3 Then IsNull(DocMerce, 0)
            Else NULL
        End
    ),
    'M04' = Sum(
        Case
            When Month(DocDta) = 4 Then IsNull(DocMerce, 0)
            Else NULL
        End
    ),
    'M05' = Sum(
        Case
            When Month(DocDta) = 5 Then IsNull(DocMerce, 0)
            Else NULL
        End
    ),
    'M06' = Sum(
        Case
            When Month(DocDta) = 6 Then IsNull(DocMerce, 0)
            Else NULL
        End
    ),
    'M07' = Sum(
        Case
            When Month(DocDta) = 7 Then IsNull(DocMerce, 0)
            Else NULL
        End
    ),
    'M08' = Sum(
        Case
            When Month(DocDta) = 8 Then IsNull(DocMerce, 0)
            Else NULL
        End
    ),
    'M09' = Sum(
        Case
            When Month(DocDta) = 9 Then IsNull(DocMerce, 0)
            Else NULL
        End
    ),
    'M10' = Sum(
        Case
            When Month(DocDta) = 10 Then IsNull(DocMerce, 0)
            Else NULL
        End
    ),
    'M11' = Sum(
        Case
            When Month(DocDta) = 11 Then IsNull(DocMerce, 0)
            Else NULL
        End
    ),
    'M12' = Sum(
        Case
            When Month(DocDta) = 12 Then IsNull(DocMerce, 0)
            Else NULL
        End)
From
    dbo.[CliDoc] A
    Left Join dbo.[MixAna] B On B.ItemID = A.AgeCod
    And B.ItemType = 2
Where
    A.DocTip In(15, 16, 17)
Group By
    A.AgeCod,
    Year(A.DocDta)
Order By
    A.AgeCod,
    Year(A.DocDta) DESC
---------------------------------------------------------------------------------------
Modulo VenditeDocSum Indice 15. Layout
---------------------------------------------------------------------------------------
ItemDes: [Nominativo],160,V,M,-E,-T,A0
ItemID: 50,V,M,-E,-T,A0
Anno: 50,V,-M,-E,-T,A111
TOT: [Totale],D50,80,V,-M,-E,-T,A212,F100
M01: [GEN],D50,80,V,-M,-E,-T,A212,CB-1644806
M02: [FEB],D50,80,V,-M,-E,-T,A212
M03: [MAR],D50,80,V,-M,-E,-T,A212,CB-1644806
M04: [APR],D50,80,V,-M,-E,-T,A212
M05: [MAG],D50,80,V,-M,-E,-T,A212,CB-1644806
M06: [GIU],D50,80,V,-M,-E,-T,A212
M07: [LUG],D50,80,V,-M,-E,-T,A212,CB-1644806
M08: [AGO],D50,80,V,-M,-E,-T,A212
M09: [SET],D50,80,V,-M,-E,-T,A212,CB-1644806
M10: [OTT],D50,80,V,-M,-E,-T,A212
M11: [NOV],D50,80,V,-M,-E,-T,A212,CB-1644806
M12: [DIC],D50,80,V,-M,-E,-T,A212
---------------------------------------------------------------------------------------
Procedura uspRibaElab_build_FILE            
Eliminare la riga:

Set @sRecord = dbo.[udfStrStuff](@sRecord, 71, 16, IsNull(@sCFis, ''))

E sostituire con:

-- M2 inizio
If Lower(LTrim(RTrim(@sPIva))) = 'n.a.'
	Set @sRecord = dbo.[udfStrStuff](@sRecord, 71, 16, IsNull(@sCFis, ''))
Else 
	Set @sRecord = dbo.[udfStrStuff](@sRecord, 71, 11, IsNull(@sPIva, ''))	
-- M2 Fine
---------------------------------------------------------------------------------------
Procedura uspFepaDoc_build                 
Verificare con uspFepaDoc_build_Pers per capire come dovrebbe essere fatta la personalizzazione
Tra la riga:

Set @sIVA_T_AE = dbo.[udfAEComCodes_iva](@sIvaCod)	

E la riga: 

End -- @dDOC_SpBolli <> 0

Commentare tutto il testo e sostituirlo con:

		-- Marco Pers Inizio
		Declare @bPersActive bit
		Set @bPersActive = Case When @sIvaCod = 'ART8' And @sIVA_T_AE = 'N3.5' Then 1 Else 0 End
		
		Set @sIVA_T_AE = Case When @bPersActive = 1 Then 'N1' Else @sIVA_T_AE End
				
		-- --------------------------------------------
 		Update @tbIVA Set
			IvaBaseAC = IsNull(IvaBaseAC, 0) + @dValue
		Where IvaCod = @sIvaCod
		-- --------------------------------------------
		Insert [#TAGs](TagText) Values('<DettaglioLinee>')
		Insert [#TAGs](TagText) Values('<NumeroLinea>' + @sRow + '</NumeroLinea>')
		Insert [#TAGs](TagText) Values('<CodiceArticolo>')
		If @bPersActive = 1 Begin
			Insert [#TAGs](TagText) Values('<CodiceTipo>Codice prodotto o servizio</CodiceTipo>')
			Insert [#TAGs](TagText) Values('<CodiceValore>BOLLO</CodiceValore>')
		End 
		If @bPersActive = 0 Begin
			Insert [#TAGs](TagText) Values('<CodiceTipo>[AC]</CodiceTipo>')
			Insert [#TAGs](TagText) Values('<CodiceValore>.AC</CodiceValore>')
		End 
		Insert [#TAGs](TagText) Values('</CodiceArticolo>')
		
		If @bPersActive = 1
			Insert [#TAGs](TagText) Values('<Descrizione>IMPOSTA PER BOLLO</Descrizione>')
		Else 
			Insert [#TAGs](TagText) Values('<Descrizione>Spese per bolli</Descrizione>')
		
		Insert [#TAGs](TagText) Values('<Quantita>1.00</Quantita>')
		If @bPersActive = 1
			Insert [#TAGs](TagText) Values('<UnitaMisura>NR</UnitaMisura>')

		Insert [#TAGs](TagText) Values('<PrezzoUnitario>' + dbo.[udfFepa_XML_value](@dValue, 0, @iDOC_DocTip) + '</PrezzoUnitario>')
		Insert [#TAGs](TagText) Values('<PrezzoTotale>' + dbo.[udfFepa_XML_value](@dValue, 0, @iDOC_DocTip) + '</PrezzoTotale>')
		Insert [#TAGs](TagText) Values('<AliquotaIVA>' + dbo.[udfFepa_XML_value](@dIvaAlq, 0, 0) + '</AliquotaIVA>')
		Insert [#TAGs](TagText) Values('<Natura>' + @sIVA_T_AE + '</Natura>')
		Insert [#TAGs](TagText) Values('</DettaglioLinee>')
		-- Marco Pers Fine

Prima del blocco:
	--
	-- RIGHE AGGIUNTIVE per lettera intento
	--

Aggiungere:

	-- Marco M2 Pers Inizio 
	If Exists(Select 1 Res 
		From dbo.[MixAnaReportLabel_Pers] A 
		Where A.ItemType = @iDOC_AnaType
			And A.ItemID = @sDOC_AnaCod
			And IsNull(A.ItemUse, '') = 'campoFATTURE' 
			And Len(LTrim(RTrim(IsNull(A.ItemDes, '')))) <> 0
	)
	Begin
		Set @iRow += 1
		Set @sRow = Cast(@iRow As varchar(8))
		
		Insert [#TAGs](TagText) Values('<DettaglioLinee>')
		Insert [#TAGs](TagText) Values('<NumeroLinea>' + @sRow + '</NumeroLinea>')
		Insert [#TAGs](TagText) Values('<CodiceArticolo>')
		Insert [#TAGs](TagText) Values('<CodiceTipo>Codice prodotto o servizio</CodiceTipo>')
		Insert [#TAGs](TagText) Values('<CodiceValore>-</CodiceValore>')
		Insert [#TAGs](TagText) Values('</CodiceArticolo>')
		Declare @sTmpReportLabelDes_Pers varchar(MAX)
		Set @sTmpReportLabelDes_Pers = (
			Select Top 1 dbo.[udfFepa_XML_normalize] (A.ItemDes) 
			From dbo.[MixAnaReportLabel_Pers] A 
			Where A.ItemType = @iDOC_AnaType
				And A.ItemID = @sDOC_AnaCod
				And IsNull(A.ItemUse, '') = Case When @iDOC_DocTip = 15 Then 'campoFATTURE' When @iDOC_DocTip = 16 Then 'campoNOTE' Else '' End 
				And Len(LTrim(RTrim(IsNull(A.ItemDes, '')))) <> 0
		)
		
		Insert [#TAGs](TagText) Values('<Descrizione>' + @sTmpReportLabelDes_Pers + '</Descrizione>')

		Insert [#TAGs](TagText) Values('<Quantita>0.00</Quantita>')
		
		Insert [#TAGs](TagText) Values('<PrezzoUnitario>0.000000</PrezzoUnitario>')
		Insert [#TAGs](TagText) Values('<PrezzoTotale>0.00</PrezzoTotale>')
		Insert [#TAGs](TagText) Values('<AliquotaIVA>0.00</AliquotaIVA>')
		Insert [#TAGs](TagText) Values('<Natura>' + @sIVA_T_AE_FC + '</Natura>')
		Insert [#TAGs](TagText) Values('</DettaglioLinee>')
	End
	-- Marco M2 Pers Fine
---------------------------------------------------------------------------------------
Modulo SupplyAna Indice 0. Modificato SQL 
---------------------------------------------------------------------------------------
Select
	  ItemID, ItemType, ItemKind, ItemStatus, ItemGroup, ItemDes
	, ItemCIG, ItemCUP, BuyOrder, BuyOrderDate
	, AnaType, AnaCod
	, (Select Top 1 Z.ItemDes From dbo.[MixAna] Z Where Z.ItemID = AnaCod And Z.ItemType = 1 And Z.ItemUse = 10) AnaDes
	, ItemInfo
	, Contract, Convention, Reception, FaseSAL
	, ItemRif1
	, Banca, BanABI, BanCAB, BanCC, BanIBAN, BanCIN, BanCheck, BanBIC, BanCod 
	, FepaDest, ItemDate1, ItemDate2, ItemDate3, ItemDate4
	, ItemValue1, ItemValue2, ItemValue3, ItemValue4
	, ItemRif2
From dbo.[SupplyAna]
Order By ItemID DESC
---------------------------------------------------------------------------------------
Modulo SupplyAna Indice 0. Modificato Layout
---------------------------------------------------------------------------------------
(grid): MR
ItemID: V,-M,E,-T,A212,CB-1828
ItemKind: V,-M,E,-T,A111,CB-983056
ItemStatus: V,-M,E,-T,A111,CB-983056
ItemGroup: -V,-M,E,-T,A0,CB-983056
AnaCod: V,-M,E,-T,A0,CB-1828
ItemInfo: 200,V,-M,E,-T,A0
ItemCIG: V,-M,E,-T,A111,CB-6751336
ItemCUP: V,-M,E,-T,A111,CB-6751336
BuyOrder: V,-M,E,-T,A0,CB-6751336
FepaDest: [Destinatario FE/PA],-V,-M,E,-T,A111,G
FaseSAL: V,-M,E,-T,A111
Banca: V,-M,E,-T,A0,CB-1828
BanIBAN: V,-M,E,-T,A0,CB-1828
BanABI: V,-M,E,-T,A0,CB-1828
BanCAB: V,-M,E,-T,A0,CB-1828
BanCIN: V,-M,E,-T,A0,CB-1828
BanCheck: V,-M,E,-T,A0,CB-1828
BanCC: V,-M,E,-T,A0,CB-1828
BanBIC: V,-M,E,-T,A0,CB-1828
BanCod: V,-M,E,-T,A0,CB-6987
AnaDes: [Nominativo],300,V,-M,-E,-T,A011,F100
---------------------------------------------------------------------------------------
Modulo SupplyAna Indice 0. Aggiunto script evento RowStyle
---------------------------------------------------------------------------------------
If "{ItemStatus}" = "9" Then
	Return "Bisque" 
	'Tomato
EndIf
---------------------------------------------------------------------------------------
Modulo di dialogo 140. Script OnOk  
---------------------------------------------------------------------------------------
MouseWait(True)
@0$ = "0"
Dim bOk = ((CIG$ & CUP$ & Order$ & Contract$ & Convention$) <> "")
If bOk Then
	MouseWait(True)
	'Personalizzazione per evitare di inserire multipli forniture/cantieri allo stesso cliente.
	'Il sistema controlla che non sia già esistente un CIG presente per il cliente selezionato. Se CIG non fornito controlla per CUP
	'Alcuni clienti devono avere la possibilità di avere CIG e CUP multipli, per evitare il blocco viene utilizzato il campo in anagrafica MixAna.Tab1
	Dim sDataValues$ =  DialogGridValues()
	Dim sSql$ = "Select 1 Res From dbo.[SupplyAna] Where IsNull(ItemStatus, 0) = 1 And IsNull(ItemCIG, '') = '" + CIG$ + "' And AnaCod = '" + AnaCod$ + "' And AnaCod Not In (Select Z.ItemID From dbo.[MixAna] Z Where Z.ItemType = 1 And Z.ItemUse = 10 And IsNull(Z.Tab1, 0) = 1)"
	If CIG$ = "" Then
		sSql$ = "Select 1 Res From dbo.[SupplyAna] Where IsNull(ItemStatus, 0) = 1 And IsNull(ItemCUP, '') = '" + CUP$ + "' And AnaCod = '" + AnaCod$ + "' And AnaCod Not In (Select Z.ItemID From dbo.[MixAna] Z Where Z.ItemType = 1 And Z.ItemUse = 10 And IsNull(Z.Tab1, 0) = 1)"
	EndIf
	Dim iExistingSupply = DbRead(sSql$)
	If iExistingSupply = 1 Then
		Dim sMsg$ = "È già presente una fornitura per il cliente selezionato!"
		If CIG$ = "" Then
			sMsg$ = sMsg$ + " CUP"
		Else
			sMsg$ = sMsg$ + " CIG"
		EndIf
		MsgOk sMsg$ + " già esistente."
		STOP
	Else
		Dim iSupplyID = DbRead("dbo.[uspSupply_new]", "", sDataValues$)
		@0$ = iSupplyID.ToString()
	EndIf
	MouseWait(False)
Else	
	MsgOk "Fornire almeno uno dei dati previsti."
	STOP
EndIf

---------------------------------------------------------------------------------------
Procedura uspRibaElab 
Ripristinare da file CUSTOM/uspRibaElab.sql
---------------------------------------------------------------------------------------
Trigger trgRibaElab_OnDelete
---------------------------------------------------------------------------------------
Dopo:

Delete dbo.[RibaElabRB]
Where ElabID In(Select IsNull(ElabID, 0) From deleted)

Inserire:

-- Inizio Pers M2
Delete dbo.[RibaElabFT_Pers]
Where ElabID In(Select IsNull(ElabID, 0) From deleted)

Delete dbo.[RibaElabRB_Pers]
Where ElabID In(Select IsNull(ElabID, 0) From deleted)
-- Fine Pers M2
---------------------------------------------------------------------------------------
Trigger trgRibaElabRB_OnDelete
---------------------------------------------------------------------------------------
Dopo:

Delete dbo.[RibaElabFT]
Where ElabID = @iElabID
	And RbCount = @iRbCount

Inserire:

-- Inizio Pers M2
Delete dbo.[RibaElabFT_Pers]
Where ElabID = @iElabID
	And RbCount = @iRbCount
-- Fine Pers M2
---------------------------------------------------------------------------------------
Eseguire seguente query per creare il Trigger trgRibaElabRB_Pers_OnDelete:
---------------------------------------------------------------------------------------

/*
*
*
*
*/
CREATE TRIGGER [dbo].[trgRibaElabRB_Pers_OnDelete]
ON [dbo].[RibaElabRB_Pers]
FOR DELETE
AS
SET NOCOUNT ON
Declare @iElabID int
Declare @iRbCount int

Declare [cCursor] Cursor LOCAL FAST_FORWARD For
Select DD.ElabID, DD.RbCount
From deleted DD
Where IsNull(DD.RbCount, 0) Not In(
	Select IsNull(BAD.RbCount, 0)
	From dbo.[RibaElabRB_BAD] BAD
	Where BAD.ElabID = DD.ElabID
	)

Open [cCursor]
Fetch Next From [cCursor] Into @iElabID, @iRbCount
While (@@Fetch_Status <> -1)
Begin
	Delete dbo.[RibaElabFT]
	Where ElabID = @iElabID
		And RbCount = @iRbCount
	Delete dbo.[RibaElabFT_Pers]
	Where ElabID = @iElabID
		And RbCount = @iRbCount
	-- ----------------------------------------------------------
	Fetch Next From [cCursor] Into @iElabID, @iRbCount
End
Close [cCursor]
Deallocate [cCursor]
---------------------------------------------------------------------------------------
Funzione udfDD_Locked
---------------------------------------------------------------------------------------
Dopo:

If Exists(
	Select TOP 1 UniqRow
	From dbo.[RibaElabFT]
	Where DocTip = @iDocTip
		And DocNum = @sDocNum
		And DocDta = @tDocDta
	) 

Inserire:

-- Inizio Pers M2
or Exists(
Select TOP 1 UniqRow
From dbo.[RibaElabFT_Pers]
Where DocTip = @iDocTip
	And DocNum = @sDocNum
	And DocDta = @tDocDta
) 
-- Fine Pers M2
---------------------------------------------------------------------------------------
Funzione udfRibaElab_docrif
---------------------------------------------------------------------------------------
Sostituire:

	Insert @tbFtRIF(
		  FtRif
		)
	Select
		dbo.[udfDocTip_DocSigla](FT.DocTip)
		+ FT.DocNum + '/' + Cast(Year(FT.DocDta) As char(4))
		+ Case 
			When (IsNull(SUP.ItemCIG, '') <> '')
			Then ' CIG:' + SUP.ItemCIG
			Else ''
			End
		+ Case 			
			When (IsNull(SUP.ItemCUP, '') <> '')
			Then ' CUP:' + SUP.ItemCUP
			Else ''
			End		

	From dbo.[RibaElabFT] FT
	Left Join dbo.[CliDoc] DOC On DOC.Uniq = FT.DocUniq
	Left Join dbo.[SupplyAna] SUP On SUP.ItemID = DOC.Fornitura
	Where FT.ElabID = @iElabID
		And FT.RbCount = @iRbCount
	Order By FT.UniqRow

Con il codice seguente:

	-- Inizio Pers M2
	Insert @tbFtRIF(
		  FtRif
		)
	Select
		dbo.[udfDocTip_DocSigla](FT.DocTip)
		+ FT.DocNum + '/' + Cast(Year(FT.DocDta) As char(4))
		+ Case 
			When (Len(LTrim(RTrim(IsNull(FT.ItemCIG, '')))) <> 0)
			Then ' CIG:' + FT.ItemCIG
			Else ''
			End
		+ Case 			
			When (Len(LTrim(RTrim(IsNull(FT.ItemCUP, '')))) <> 0)
			Then ' CUP:' + FT.ItemCUP
			Else ''
			End		

	From dbo.[RibaElabFT_Pers] FT
	Where FT.ElabID = @iElabID
		And FT.RbCount = @iRbCount
	Order By FT.UniqRow
	-- Fine Pers M2
---------------------------------------------------------------------------------------
Funzione udfRpt_CntRegRibaByAnaCod --> Non dovrebbe essere necessario xchè già pers
---------------------------------------------------------------------------------------

Dopo:

Concat(
	'NUMERO DOCUMENTO: ', FT.DocNum, @sCrLf,
	'DATA DOCUMENTO: ', dbo.[udfRpt_FormatDate](FT.DocDta), @sCrLf,
	'DATA SCADENZA: ', dbo.[udfRpt_FormatDate](RB.RbDate), @sCrLf,
	'IMPORTO: ', dbo.[udfRpt_Format](RB.RbValue, '2'), ' ', FT.CntPayDivisa, @sCrLf,
	'BANCA: ', dbo.[udfStrReplaceRepeat](RB.Banca, '', ''), @sCrLf,
	'ABI: ', RB.BanABI, @sCrLf,
	'CAB: ', RB.BanCAB, @sCrLf,
	@sCrLf
) As RiepilogoScadenzeCliente

Inserire:

-- Inizio Pers M2
From dbo.[RibaElabRB_Pers] RB
Left Join dbo.[RibaElabFT_Pers] FT On FT.ElabID = @iElabID And FT.RbCount = RB.RbCount
-- Fine Pers M2
---------------------------------------------------------------------------------------
Trigger trgCntReg_OnDelete
---------------------------------------------------------------------------------------
Dopo:

Update dbo.[RibaElabRB] Set
	  RbOk = 0
	, RbDone = 0
	, RbNum = NULL
	, RbPreNum = NULL
	, CntRegUniq = NULL
Where (CntRegUniq In(Select Uniq From deleted))

Inserire:

-- Inizio Pers M2
Update dbo.[RibaElabRB_Pers] Set
	  RbOk = 0
	, RbDone = 0
	, RbNum = NULL
	, RbPreNum = NULL
	, CntRegUniq = NULL
Where (CntRegUniq In(Select Uniq From deleted))
-- Fine Pers M2
---------------------------------------------------------------------------------------
Menu 45360552 Script:
---------------------------------------------------------------------------------------

Commentare riga:

bOk = DbExecute("dbo.[uspRibaElab_action]", iSession, iAction, iElabID, "")

E aggiungere:

bOk = DbExecute("dbo.[uspRibaElab_action_Pers]", iSession, iAction, iElabID, "")

------------------------------------

Commentare riga:

sSql$ = "Select Count(1) Res From (Select 1 Res From dbo.[RibaElabFT] A Where A.ElabID = " + iElabID + " And A.RbCount In (Select Z.RbCount From dbo.[RibaElabRB] Z Where Z.ElabID = " + iElabID + " And IsNull(Z.RbOkContact, 0) = 1 And IsNull(Z.RbContacted, 0) <> 1 ) Group By A.DocTip, A.DocNum) B"

E aggiungere:

sSql$ = "Select Count(1) Res From (Select 1 Res From dbo.[RibaElabFT_Pers] A Where A.ElabID = " + iElabID + " And A.RbCount In (Select Z.RbCount From dbo.[RibaElabRB_Pers] Z Where Z.ElabID = " + iElabID + " And IsNull(Z.RbOkContact, 0) = 1 And IsNull(Z.RbContacted, 0) <> 1 ) Group By A.DocTip, A.DocNum) B"

------------------------------------

Commentare riga:

sSql$ = "Select Distinct C.Uniq UniqDoc, dbo.[udfFileName_normalize] (C.DocNum) DocNum, dbo.[udfFileName_normalize] (C.DocDta) DocDta, B.MailMessageID MailMessageID From dbo.[RibaElabFT] A Join dbo.[RibaElabRB] B On B.ElabID = " + iElabID + " And B.RbCount = A.RbCount Join dbo.[CliDoc] C On C.DocTip = A.DocTip And C.AnaCod = A.AnaCod And C.DocNum = A.DocNum Where (1=1) And A.ElabID = " + iElabID + " And IsNull(B.RbOkContact, 0) = 1 And IsNull(B.RbContacted, 0) <> 1"

E aggiungere:

sSql$ = "Select Distinct C.Uniq UniqDoc, dbo.[udfFileName_normalize] (C.DocNum) DocNum, dbo.[udfFileName_normalize] (C.DocDta) DocDta, B.MailMessageID MailMessageID From dbo.[RibaElabFT_Pers] A Join dbo.[RibaElabRB_Pers] B On B.ElabID = " + iElabID + " And B.RbCount = A.RbCount Join dbo.[CliDoc] C On C.DocTip = A.DocTip And C.AnaCod = A.AnaCod And C.DocNum = A.DocNum Where (1=1) And A.ElabID = " + iElabID + " And IsNull(B.RbOkContact, 0) = 1 And IsNull(B.RbContacted, 0) <> 1"

------------------------------------

Commentare riga:

sSql$ = "Select Count(1) Res From dbo.[RibaElabRB] Where IsNull(MailMessageID, 0) <> 0 And ElabID = " + iElabID + " And IsNull(RbOkContact, 0) = 1 And IsNull(RbContacted, 0) <> 1 Group By MailMessageID"

E aggiungere:

sSql$ = "Select Count(1) Res From dbo.[RibaElabRB_Pers] Where IsNull(MailMessageID, 0) <> 0 And ElabID = " + iElabID + " And IsNull(RbOkContact, 0) = 1 And IsNull(RbContacted, 0) <> 1 Group By MailMessageID"

------------------------------------

Commentare riga:

If DbConnReaderOpen("Select Distinct MailMessageID From dbo.[RibaElabRB] Where IsNull(MailMessageID, 0) <> 0 And ElabID = " + iElabID + " And IsNull(RbOkContact, 0) = 1 And IsNull(RbContacted, 0) <> 1") Then

E aggiungere:

If DbConnReaderOpen("Select Distinct MailMessageID From dbo.[RibaElabRB_Pers] Where IsNull(MailMessageID, 0) <> 0 And ElabID = " + iElabID + " And IsNull(RbOkContact, 0) = 1 And IsNull(RbContacted, 0) <> 1") Then

------------------------------------

Commentare riga:

sSql$ = "Update dbo.[RibaElabRB] Set RbOkContact = 0, RbContacted = 1, RbContactedDate = GetDate() Where IsNull(RbOkContact, 0) = 1 And IsNull(RbContacted, 0) <> 1 And IsNull(MailMessageID, 0) <> 0 And ElabID = " + iElabID

E aggiungere:

sSql$ = "Update dbo.[RibaElabRB_Pers] Set RbOkContact = 0, RbContacted = 1, RbContactedDate = GetDate() Where IsNull(RbOkContact, 0) = 1 And IsNull(RbContacted, 0) <> 1 And IsNull(MailMessageID, 0) <> 0 And ElabID = " + iElabID
---------------------------------------------------------------------------------------
Modulo RibaElabDrop Indice 0. Modificato SQL 
---------------------------------------------------------------------------------------
Select DocTip, DocNum, DocDta, DocValue, DocTot, UniqRow
From dbo.[RibaElabFT_Pers]
Where (1=1) 
	And ElabID = {0}
	And RbCount = {1}
Order By DocTip, DocNum, DocDta
---------------------------------------------------------------------------------------
Menu 45360510 Script:
---------------------------------------------------------------------------------------

Commentare riga:

sMsg$ = DbRead("dbo.[uspRibaElab_action]", "", iSession, iAction, iElabID, sParam$)

E aggiungere:

sMsg$ = DbRead("dbo.[uspRibaElab_action_Pers]", "", iSession, iAction, iElabID, sParam$)
---------------------------------------------------------------------------------------
Menu 45360512 Script:
---------------------------------------------------------------------------------------

Commentare riga:

sMsg$ = DbRead("dbo.[uspRibaElab_action]", "", iSession, iAction, iElabID, sParam$)

E aggiungere:

sMsg$ = DbRead("dbo.[uspRibaElab_action_Pers]", "", iSession, iAction, iElabID, sParam$)
---------------------------------------------------------------------------------------
Menu 45360518 Script:
---------------------------------------------------------------------------------------

Commentare riga:

sMsg$ = DbRead("dbo.[uspRibaElab_action]", "", iSession, iAction, iElabID, sParam$)

E aggiungere:

sMsg$ = DbRead("dbo.[uspRibaElab_action_Pers]", "", iSession, iAction, iElabID, sParam$)
---------------------------------------------------------------------------------------
Menu 45360540 Script:
---------------------------------------------------------------------------------------

Commentare riga:

DbExecute("dbo.[uspRibaElab_action]", iSession, iAction, iElabID, sParam$)	

E aggiungere:

DbExecute("dbo.[uspRibaElab_action_Pers]", iSession, iAction, iElabID, sParam$)	
---------------------------------------------------------------------------------------
Menu 45360542 Script:
---------------------------------------------------------------------------------------

Commentare riga:

DbExecute("dbo.[uspRibaElab_action]", iSession, iAction, iElabID, sParam$)

E aggiungere:

DbExecute("dbo.[uspRibaElab_action_Pers]", iSession, iAction, iElabID, sParam$)
---------------------------------------------------------------------------------------
Menu 45360544 Script:
---------------------------------------------------------------------------------------

Commentare riga:

DbExecute("dbo.[uspRibaElab_action]", iSession, iAction, iElabID, sParam$)

E aggiungere:

DbExecute("dbo.[uspRibaElab_action_Pers]", iSession, iAction, iElabID, sParams$)
---------------------------------------------------------------------------------------
Menu 45360546 Script:
---------------------------------------------------------------------------------------

Commentare riga:

DbExecute("dbo.[uspRibaElab_action]", iSession, iAction, iElabID, sParams$)

E aggiungere:

DbExecute("dbo.[uspRibaElab_action_Pers]", iSession, iAction, iElabID, sParams$)
---------------------------------------------------------------------------------------
Menu 45360548 Script:
---------------------------------------------------------------------------------------

Commentare riga:

DbExecute("dbo.[uspRibaElab_action]", iSession, iAction, iElabID, sParams$)

E aggiungere:

DbExecute("dbo.[uspRibaElab_action_Pers]", iSession, iAction, iElabID, sParams$)
---------------------------------------------------------------------------------------
Menu 45360549 Script:
---------------------------------------------------------------------------------------

Commentare riga:

DbExecute("dbo.[uspRibaElab_action]", iSession, iAction, iElabID, sParams$)

E aggiungere:

DbExecute("dbo.[uspRibaElab_action_Pers]", iSession, iAction, iElabID, sParams$)
---------------------------------------------------------------------------------------
Form RibaElab Indice 5 -> Script Eventi -> HeadClick --> Non dovrebbe essere necessario xchè già pers
---------------------------------------------------------------------------------------

Commentare riga:

sMsg$ = DbRead("dbo.[uspRibaElab_action]", "", iSession, iAction, iElabID, sParam$)	

E aggiungere:

sMsg$ = DbRead("dbo.[uspRibaElab_action_Pers]", "", iSession, iAction, iElabID, sParam$)
---------------------------------------------------------------------------------------
Form RibaElab Indice 7 -> Script Eventi -> buttondelete --> Non dovrebbe essere necessario xchè già pers
---------------------------------------------------------------------------------------

Commentare riga:

sMsg$ = DbRead("dbo.[uspRibaElab_action]", "", iSession, iAction, iUniqRow, "")	

E aggiungere:

sMsg$ = DbRead("dbo.[uspRibaElab_action_Pers]", "", iSession, iAction, iUniqRow, "")	
---------------------------------------------------------------------------------------
Moduli di Dialogo 96 -> ScriptOnOpen
---------------------------------------------------------------------------------------

Commentare riga:

If DbReadNamed("dbo.[uspRibaElab_action]", iSession, iAction, iUniqRow, "") Then	

E aggiungere:

If DbReadNamed("dbo.[uspRibaElab_action_Pers]", iSession, iAction, iUniqRow, "") Then
---------------------------------------------------------------------------------------
Moduli di Dialogo 95 -> Parametro 11 -> Script
---------------------------------------------------------------------------------------

Commentare riga:

If DbReadNamed("dbo.[uspRibaElab_action]", iSession, iAction, iElabID, BanCod$) Then	

E aggiungere:

If DbReadNamed("dbo.[uspRibaElab_action_Pers]", iSession, iAction, iElabID, BanCod$) Then
---------------------------------------------------------------------------------------
Form MagUnderElab Indice 2 -> SQL
---------------------------------------------------------------------------------------
Select 
	'' As buttonPlus
	, MUE.ElabID
	, MUE.ForCod
	, MUE.ForNom
	, PA.GrpCod
	, MUE.PrdForCod
	, MUE.PrdCod, MUE.PrdUm
	-- , QtaUnder
	, MUE.QtaExist--, QtaOF
	, MUE.QtaMissing
	-- , QtaOC
	, MUE.QtaStockMin, MUE.QtaStockMax
	, MUE.QtaForUsual, MUE.QtaForMin, MUE.QtaForPack, MUE.ForTmpCns, MUE.ForQta	
	, MUE.UniqRow	
	, MUE.PrdDes
From dbo.[MagUnderElabLin] MUE Join dbo.[PrdAna] PA On MUE.PrdCod = PA.PrdCod
Where MUE.ElabID = {ElabID}
	And IsNull(MUE.ForCod, 0) <> ''
	And IsNull(MUE.ForQta, 0) > 0
Order By MUE.ForCod, MUE.PrdCod
---------------------------------------------------------------------------------------
Form MagUnderElab Indice 1 -> SQL
---------------------------------------------------------------------------------------
Select 
	'' As buttonPlus
	, MUE.ElabID
	, MUE.PrdCod
	, PA.GrpCod
	, MUE.PrdUm
	, MUE.QtaUnder
	, MUE.QtaExist, MUE.QtaOF, MUE.QtaOC, MUE.QtaMissing
	, MUE.QtaStockMin, MUE.QtaStockMax
	, MUE.ForCod
	-- , PrdForCod
	, MUE.QtaForUsual, MUE.QtaForMin, MUE.QtaForPack, MUE.ForTmpCns, MUE.ForQta
	-- , ForNom
	, MUE.UniqRow	
	, MUE.PrdDes
From dbo.[MagUnderElabLin] MUE Join dbo.[PrdAna] PA On MUE.PrdCod = PA.PrdCod
Where MUE.ElabID = {ElabID}
Order By MUE.PrdCod, MUE.ForCod
---------------------------------------------------------------------------------------
Modulo MagSitOC{0} Indice 0
---------------------------------------------------------------------------------------
Pers: 1

Layout:
buttonPlus: [# _191919-16_icons8-add-16.png § ... § Dati aggiuntivi],30,B10100,V,-M,-T,A111,CF-657931,CB-657931
LinNum: [Riga],40,-V,-M,-E,-T,A212
PrdDes: [Descrizione prodotto],160,V,-M,-E,-T,A0,G
ForNom: [Nominativo],160,V,M,-E,-T,A0,G
PrdCod: [Prodotto],100,V,-M,-E,-T,A0,CB-1828
ForCod: [Fornitore],90,V,M,-E,-T,A0,CB-983056
PrdForCod: [Prodotto fornitore],90,V,-M,-E,-T,A0,CB-1828
QtaNeed: [Fabbisogno da ordine],D43,90,V,-M,-E,T,A212,F100,CB-16
QtaOrder: [Da ordinare],D43,90,V,-M,-E,T,A212,F100,CB-133658
QtaExist: [Esistenza],D43,90,V,-M,-E,T,A212
QtaForOrd: [Ordinato a fornitore],D43,90,-V,-M,-E,-T,A212
PrzAcq: [Prezzo acquisto],D44,90,V,-M,-E,-T,A212
TotOrder: [Importo ordinato a forn.],D45,90,V,-M,-E,T,A212
PrdUm: [U.M.],40,V,-M,-E,-T,A111