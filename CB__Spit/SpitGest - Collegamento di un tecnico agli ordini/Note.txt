CREATE TABLE [CliOrdEx_Pers](
	  [Uniq] int NULL
	, [CaPre] decimal(9, 2) NULL
	, [Note] varchar(MAX) NULL
	, [Escl] varchar(MAX) NULL
	, [Tecnico] smallint NULL
	, [DtaTecnico] date NULL
	, [DtaScadenza] date NULL
	)

CREATE TABLE [CliDocEx_Pers](
	  [Uniq] int NULL
	, [CaPre] decimal(9, 2) NULL
	, [Note] varchar(MAX) NULL
	, [Escl] varchar(MAX) NULL
	, [Tecnico] smallint NULL
	, [DtaTecnico] date NULL
	, [DtaScadenza] date NULL
	)

-------------------------------------------------------------------------------------------------------------------------
Modulo UserAnaTecnici. Indice 0.
-------------------------------------------------------------------------------------------------------------------------
Pers: 1
Tipo: 0
Uso: gridvalue
Stile finestra: 1
Intestazione finestra: Tecnici
Visualizzazione: 600,0,0,0,0,0,0,0,0,0,0,0,0,0,0
Opzioni: 00011101000000000

SQL:
%
Dim sListTecnici$ = DbRead("Select ItemUsers from dbo.[UserGrp] Where ItemID = 'TECNICO'", "ItemUsers")
[SQL]
Select UserID, UserLogin, UserName
From dbo.[UserAna]
Where IsNull(ItemDisabled, 0) = 0 And UserID In(Select Token From dbo.[udfStrSplit]('{@sListTecnici$}', ','))
Order By UserID
[/SQL]

Layout:
(grid): MR
UserID: V,-M,-E,-T,A0,CB-1828
UserLogin: 160,V,-M,-E,-T,A0
UserName: 60,V,-M,-E,-T,CB-983056

Ritorna: UserID

Tooltip: 
Select IsNull(UserName, '')
	+ '|Login: ' + IsNull(UserLogin, '')
From dbo.[UserAna]
Where UserID = {VALUE}

-------------------------------------------------------------------------------------------------------------------------
Modulo docOC{0}. Indice 1. DB_PERS. BpSPITGEST.
-------------------------------------------------------------------------------------------------------------------------
Pers: 1
Intestazione tab: Cliente

Intestazione grid: 
(2)[edit.gif]@Select Case When dbo.[udfSysUserID]({SESSION}) In (Select Token From dbo.[udfStrSplit]((Select Top 1 ItemUsers from dbo.[UserGrp] Where ItemID = 'TECNICO'), ',')) Then NULL Else ' Per modificare gli estremi del documento fare click QUI' End

Opzioni: 0000011100000100000

SQL:
Select A.*,
	ItemDes, Ind, Loc, Pro, Naz,
	'Telefono' = (Select Top 1
				IsNull(Tel1, '') + ' ' + IsNull(Tel2, '') + ' ' + IsNull(Tel3, '')
				From [MixAnaRif] C
				Where C.ItemID = B.ItemID 
					And C.ItemType = A.AnaType
					And IsNull(C.ItemIDSede, '') = ''
				Order By IsNull(ItemDefault, 0) DESC
		),
	PIva, CFis,
	CaPre, Tecnico, dbo.[udfSysUserID_Name](Tecnico) as NominativoTecnico, DtaTecnico, DtaScadenza
From dbo.[{TableHead}] A
Left Join dbo.[MixAna] B On B.ItemID = A.AnaCod And B.ItemType = A.AnaType
Left Join dbo.[{TableHead}Ex_Pers] C On C.Uniq = A.Uniq
Where A.Uniq = (0)

Nascondi toolbar: 1

Layout:
(grid): V3,WC120,WD480
ItemDes: V,-M,-E,-T,F100
NominativoTecnico: [Nominativo tecnico],V,-M,-E,-T

Script eventi:
<layout>
<![CDATA[
DataHide("*")
DataShow("AnaCod,ItemDes,Ind,Loc,Pro,Naz,Telefono,PIva,CFis,Tecnico,NominativoTecnico,DtaTecnico,DtaScadenza")
]]>
</layout>
<headclick>
<![CDATA[
DocDataDialog(101, True)
]]>
</headclick>

Script dati:
<datacommandkey>
<![CDATA[
Uniq
]]>
</datacommandkey>
<insertcommand>
<![CDATA[
INSERT dbo.[CliOrd](
	DocTip, DocNum, DocDta, DocOra, DocKind, DocStatus, AnaType, AnaCod, AnaCodFrom, DsmCod, MndCod, ForDocNum, ForDocDta, VsRif, NsRif, NumExt, DocRif, Info, SendDta, SendWay, SendInfo, CnsDta, CnsWeek, CnsInfo, DocTot, DocImp, DocIva, 
	DocOmg, DocMerce, DocSconti, DocSpese, PagCod, PagStart, AgeCod, PrvSplitCod, PrvFix, PrvTot, LstCod, LstSconti, ShipPayCod, ShipCod, VetCod, VetCod2, SctTotPc, SctTot, SctPagPc, SctPag, SpImballo, SpTra, SpRiba, SpBolli, 
	SpVarie, Lotto, Fornitura, RapUniq, Packing, TrMezzo, TrPorto, Colli, EmiCau, AspBeni, Imballo, Peso, PesoNetto, Volume, DtaRitM, OraRitM, SegueFt, VetComp, Info1, Info2, Info3, Info4, Info5, Info6, DocIvaCod, Divisa, Cambio, 
	CambioDta, CntRegMod, CntRegDta, CntRegDtaIva MagMovMod, MagMovMod2, MagMovDta, NumCod, Numero, Uniq, Uniq2, RecCreate, RecUserID, RecCompany, RecAgency, RecLocked, RecPrinted, RecType, RecElabID, RecValue
	)
VALUES (
	{DocTip}, '{DocNum}', '{DocDta}', '{DocOra}', {DocKind}, {DocStatus}, {AnaType}, '{AnaCod}', '{AnaCodFrom}', '{DsmCod}', '{MndCod}', '{ForDocNum}', '{ForDocDta}', '{VsRif}', '{NsRif}', '{NumExt}', '{DocRif}', '{Info}', '{SendDta}', '{SendWay}', '{SendInfo}', '{CnsDta}', {CnsWeek}, '{CnsInfo}', {DocTot}, {DocImp}, {DocIva}, 
	{DocOmg}, {DocMerce}, {DocSconti}, {DocSpese}, '{PagCod}', '{PagStart}', '{AgeCod}', '{PrvSplitCod}', {PrvFix}, {PrvTot}, '{LstCod}', '{LstSconti}', '{ShipPayCod}', '{ShipCod}', '{VetCod}', '{VetCod2}', {SctTotPc}, {SctTot}, {SctPagPc}, {SctPag}, {SpImballo}, {SpTra}, {SpRiba}, {SpBolli}, 
	{SpVarie}, '{Lotto}', {Fornitura}, {RapUniq}, {Packing}, {TrMezzo}, {TrPorto}, {Colli}, '{EmiCau}', '{AspBeni}', '{Imballo}', {Peso}, {PesoNetto}, {Volume}, '{DtaRitM}', '{OraRitM}', {SegueFt}, {VetComp}, '{Info1}', '{Info2}', '{Info3}', '{Info4}', '{Info5}', '{Info6}', '{DocIvaCod}', '{Divisa}', {Cambio}, 
	'{CambioDta}', '{CntRegMod}', '{CntRegDta}', '{CntRegDtaIva}', '{MagMovMod}', '{MagMovMod2}', '{MagMovDta}', '{NumCod}', {Numero}, {Uniq}, {Uniq2}, '{RecCreate}', {RecUserID}, {RecCompany}, {RecAgency}, {RecLocked}, {RecPrinted}, {RecType}, {RecElabID}, {RecValue}
	)
INSERT dbo.[CliOrdEx_Pers](
	CaPre, Uniq, Tecnico, DtaTecnico, DtaScadenza
	)
VALUES (
	{CaPre},
	{Uniq},
	{Tecnico},
	'{DtaTecnico}',
	'{DtaScadenza}'
	)
]]>
</insertcommand>
<deletecommand>
<![CDATA[
DELETE dbo.[CliOrd]
WHERE Uniq = {original_Uniq}
DELETE FROM dbo.[CliOrdEx_Pers]
WHERE Uniq = {original_Uniq}
]]>
</deletecommand>
<updatecommand>
<![CDATA[
UPDATE dbo.[CliOrd] SET 
	DocTip = {DocTip}, DocNum = '{DocNum}', DocDta = '{DocDta}', DocOra = '{DocOra}', DocKind = {DocKind}, DocStatus = {DocStatus}, AnaType = {AnaType}, AnaCod = '{AnaCod}', AnaCodFrom = '{AnaCodFrom}', DsmCod = '{DsmCod}', 
	MndCod = '{MndCod}', ForDocNum = '{ForDocNum}', ForDocDta = '{ForDocDta}', VsRif = '{VsRif}', NsRif = '{NsRif}', NumExt = '{NumExt}', DocRif = '{DocRif}', Info = '{Info}', SendDta = '{SendDta}', SendWay = '{SendWay}', 
	SendInfo = '{SendInfo}', CnsDta = '{CnsDta}', CnsWeek = {CnsWeek}, CnsInfo = '{CnsInfo}', DocTot = {DocTot}, DocImp = {DocImp}, DocIva = {DocIva}, DocOmg = {DocOmg}, DocMerce = {DocMerce}, DocSconti = {DocSconti}, 
	DocSpese = {DocSpese}, PagCod = '{PagCod}', PagStart = '{PagStart}', AgeCod = '{AgeCod}', PrvSplitCod = '{PrvSplitCod}', PrvFix = {PrvFix}, PrvTot = {PrvTot}, LstCod = '{LstCod}', LstSconti = '{LstSconti}', ShipPayCod = '{ShipPayCod}', 
	ShipCod = '{ShipCod}', VetCod = '{VetCod}', VetCod2 = '{VetCod2}', SctTotPc = {SctTotPc}, SctTot = {SctTot}, SctPagPc = {SctPagPc}, SctPag = {SctPag}, SpImballo = {SpImballo}, SpTra = {SpTra}, SpRiba = {SpRiba}, SpBolli = {SpBolli}, 
	SpVarie = {SpVarie}, Lotto = '{Lotto}', Fornitura = {Fornitura}, RapUniq = {RapUniq}, Packing = {Packing}, TrMezzo = {TrMezzo}, TrPorto = {TrPorto}, Colli = {Colli}, EmiCau = '{EmiCau}', AspBeni = '{AspBeni}', Imballo = '{Imballo}', 
	Peso = {Peso}, PesoNetto = {PesoNetto}, Volume = {Volume}, DtaRitM = '{DtaRitM}', OraRitM = '{OraRitM}', SegueFt = {SegueFt}, VetComp = {VetComp}, Info1 = '{Info1}', Info2 = '{Info2}', Info3 = '{Info3}', Info4 = '{Info4}', 
	Info5 = '{Info5}', Info6 = '{Info6}', DocIvaCod = '{DocIvaCod}', Divisa = '{Divisa}', Cambio = {Cambio}, CambioDta = '{CambioDta}', CntRegMod = '{CntRegMod}', CntRegDta = '{CntRegDta}', CntRegDtaIva = '{CntRegDtaIva}', 
	MagMovMod = '{MagMovMod}', MagMovMod2 = '{MagMovMod2}', MagMovDta = '{MagMovDta}', NumCod = '{NumCod}', Numero = {Numero}, Uniq = {Uniq}, Uniq2 = {Uniq2}, RecCreate = '{RecCreate}', RecUserID = {RecUserID}, 
	RecCompany = {RecCompany}, RecAgency = {RecAgency}, RecLocked = {RecLocked}, RecPrinted = {RecPrinted}, RecType = {RecType}, RecElabID = {RecElabID}, RecValue = {RecValue}
WHERE Uniq = {original_Uniq}
MERGE dbo.[CliOrdEx_Pers] WITH(HOLDLOCK) AS T
USING (VALUES ({CaPre},{Tecnico},'{DtaTecnico}','{DtaScadenza}'))
    AS S (CaPre,Tecnico,DtaTecnico,DtaScadenza)
    ON T.Uniq = {original_Uniq}
WHEN MATCHED THEN
    UPDATE
    SET CaPre = S.CaPre
    , Tecnico = S.Tecnico
    , DtaTecnico = S.DtaTecnico
	, DtaScadenza = S.DtaScadenza
WHEN NOT MATCHED THEN
INSERT (
	Uniq, CaPre, Tecnico, DtaTecnico, DtaScadenza
	)
VALUES (
	{original_Uniq}, S.CaPre, S.Tecnico, S.DtaTecnico, S.DtaScadenza
	);
]]>
</updatecommand>

Nome dati:
CliOrd

-------------------------------------------------------------------------------------------------------------------------
Modulo docOC{0}. Indice 2.
-------------------------------------------------------------------------------------------------------------------------
Pers: 1

Intestazione grid: 
(2)[edit.gif]@Select Case When dbo.[udfSysUserID]({SESSION}) In (Select Token From dbo.[udfStrSplit]((Select Top 1 ItemUsers from dbo.[UserGrp] Where ItemID = 'TECNICO'), ',')) Then NULL Else ' Per modificare le condizioni di vendita fare click QUI' End

-------------------------------------------------------------------------------------------------------------------------
Modulo docOC{0}. Indice 3.
-------------------------------------------------------------------------------------------------------------------------
Pers: 1

Intestazione grid: 
(3)[new.png]@Select Case When dbo.[udfSysUserID]({SESSION}) In (Select Token From dbo.[udfStrSplit]((Select Top 1 ItemUsers from dbo.[UserGrp] Where ItemID = 'TECNICO'), ',')) Then NULL Else ' Fare click QUI per aggiungere una destinazione merce non ancora codificata.
Per cambiare una destinazione merce gi√† presente, agire dagli estremi del documento.' End


-------------------------------------------------------------------------------------------------------------------------
Modulo docPD{0}. Indice 1. DB_PERS. BpSPITGEST.
-------------------------------------------------------------------------------------------------------------------------
Pers: 1
Intestazione tab: Cliente

Intestazione grid: 
(2)[edit.gif] Per modificare gli estremi del documento fare click QUI

Opzioni: 0000011100000100000

SQL:
Select A.*,
	ItemDes, Ind, Loc, Pro, Naz,
	'Telefono' = (Select Top 1
				IsNull(Tel1, '') + ' ' + IsNull(Tel2, '') + ' ' + IsNull(Tel3, '')
				From [MixAnaRif] C
				Where C.ItemID = B.ItemID 
					And C.ItemType = A.AnaType
					And IsNull(C.ItemIDSede, '') = ''
				Order By IsNull(ItemDefault, 0) DESC
		),
	PIva, CFis,
	CaPre, Tecnico, dbo.[udfSysUserID_Name](Tecnico) as NominativoTecnico, DtaTecnico, DtaScadenza
From dbo.[{TableHead}] A
Left Join dbo.[MixAna] B On B.ItemID = A.AnaCod And B.ItemType = A.AnaType
Left Join dbo.[{TableHead}Ex_Pers] C On C.Uniq = A.Uniq
Where A.Uniq = (0)

Nascondi toolbar: 1

Layout:
(grid): V3,WC120,WD480
ItemDes: V,-M,-E,-T,F100
NominativoTecnico: [Nominativo tecnico],V,-M,-E,-T

Script eventi:
<layout>
<![CDATA[
DataHide("*")
DataShow("AnaCod,ItemDes,Ind,Loc,Pro,Naz,Telefono,PIva,CFis,Tecnico,NominativoTecnico,DtaTecnico,DtaScadenza")
]]>
</layout>
<headclick>
<![CDATA[
DocDataDialog(101, True)
]]>
</headclick>

Script dati:
<deletecommand>
<![CDATA[
DELETE dbo.[CliDoc]
WHERE Uniq = {original_Uniq}
DELETE FROM dbo.[CliDocEx_Pers]
WHERE Uniq = {original_Uniq}
]]>
</deletecommand>
<updatecommand>
<![CDATA[
UPDATE dbo.[CliDoc] SET
	DocTip = {DocTip}, DocNum = '{DocNum}', DocDta = '{DocDta}', DocOra = '{DocOra}', DocKind = {DocKind}, DocStatus = {DocStatus}, AnaType = {AnaType}, AnaCod = '{AnaCod}', AnaCodFrom = '{AnaCodFrom}', DsmCod = '{DsmCod}', 
	MndCod = '{MndCod}', ForDocNum = '{ForDocNum}', ForDocDta = '{ForDocDta}', VsRif = '{VsRif}', NsRif = '{NsRif}', NumExt = '{NumExt}', DocRif = '{DocRif}', Info = '{Info}', SendDta = '{SendDta}', SendWay = '{SendWay}', 
	SendInfo = '{SendInfo}', CnsDta = '{CnsDta}', CnsWeek = {CnsWeek}, CnsInfo = '{CnsInfo}', DocTot = {DocTot}, DocImp = {DocImp}, DocIva = {DocIva}, DocOmg = {DocOmg}, DocMerce = {DocMerce}, DocSconti = {DocSconti}, 
	DocSpese = {DocSpese}, PagCod = '{PagCod}', PagStart = '{PagStart}', AgeCod = '{AgeCod}', PrvSplitCod = '{PrvSplitCod}', PrvFix = {PrvFix}, PrvTot = {PrvTot}, LstCod = '{LstCod}', LstSconti = '{LstSconti}', ShipPayCod = '{ShipPayCod}', 
	ShipCod = '{ShipCod}', VetCod = '{VetCod}', VetCod2 = '{VetCod2}', SctTotPc = {SctTotPc}, SctTot = {SctTot}, SctPagPc = {SctPagPc}, SctPag = {SctPag}, SpImballo = {SpImballo}, SpTra = {SpTra}, SpRiba = {SpRiba}, SpBolli = {SpBolli}, 
	SpVarie = {SpVarie}, Lotto = '{Lotto}', Fornitura = {Fornitura}, RapUniq = {RapUniq}, Packing = {Packing}, TrMezzo = {TrMezzo}, TrPorto = {TrPorto}, Colli = {Colli}, EmiCau = '{EmiCau}', AspBeni = '{AspBeni}', Imballo = '{Imballo}', 
	Peso = {Peso}, PesoNetto = {PesoNetto}, Volume = {Volume}, DtaRitM = '{DtaRitM}', OraRitM = '{OraRitM}', SegueFt = {SegueFt}, VetComp = {VetComp}, Info1 = '{Info1}', Info2 = '{Info2}', Info3 = '{Info3}', Info4 = '{Info4}', 
	Info5 = '{Info5}', Info6 = '{Info6}', DocIvaCod = '{DocIvaCod}', Divisa = '{Divisa}', Cambio = {Cambio}, CambioDta = '{CambioDta}', CntRegMod = '{CntRegMod}', CntRegDta = '{CntRegDta}', CntRegDtaIva = '{CntRegDtaIva}', 
	MagMovMod = '{MagMovMod}', MagMovMod2 = '{MagMovMod2}', MagMovDta = '{MagMovDta}', NumCod = '{NumCod}', Numero = {Numero}, Uniq = {Uniq}, Uniq2 = {Uniq2}, RecCreate = '{RecCreate}', RecUserID = {RecUserID}, 
	RecCompany = {RecCompany}, RecAgency = {RecAgency}, RecLocked = {RecLocked}, RecPrinted = {RecPrinted}, RecType = {RecType}, RecElabID = {RecElabID}, RecValue = {RecValue}
WHERE Uniq = {original_Uniq}
MERGE dbo.[CliDocEx_Pers] WITH(HOLDLOCK) AS T
USING (VALUES ({CaPre},{Tecnico},'{DtaTecnico}','{DtaScadenza}'))
    AS S (CaPre,Tecnico,DtaTecnico,DtaScadenza)
    ON T.Uniq = {original_Uniq}
WHEN MATCHED THEN
    UPDATE
    SET CaPre = S.CaPre
    , Tecnico = S.Tecnico
    , DtaTecnico = S.DtaTecnico
	, DtaScadenza = S.DtaScadenza
WHEN NOT MATCHED THEN
INSERT (
	Uniq, CaPre, Tecnico, DtaTecnico, DtaScadenza
	)
VALUES (
	{original_Uniq}, S.CaPre, S.Tecnico, S.DtaTecnico, S.DtaScadenza
	);
]]>
</updatecommand>
<datacommandkey>
<![CDATA[
Uniq
]]>
</datacommandkey>
<insertcommand>
<![CDATA[
INSERT dbo.[CliDoc](
	DocTip, DocNum, DocDta, DocOra, DocKind, DocStatus, AnaType, AnaCod, AnaCodFrom, DsmCod, MndCod, ForDocNum, ForDocDta, VsRif, NsRif, NumExt, DocRif, Info, SendDta, SendWay, SendInfo, CnsDta, CnsWeek, CnsInfo, DocTot, DocImp, DocIva,
	DocOmg, DocMerce, DocSconti, DocSpese, PagCod, PagStart, AgeCod, PrvSplitCod, PrvFix, PrvTot, LstCod, LstSconti, ShipPayCod, ShipCod, VetCod, VetCod2, SctTotPc, SctTot, SctPagPc, SctPag, SpImballo, SpTra, SpRiba, SpBolli, 
	SpVarie, Lotto, Fornitura, RapUniq, Packing, TrMezzo, TrPorto, Colli, EmiCau, AspBeni, Imballo, Peso, PesoNetto, Volume, DtaRitM, OraRitM, SegueFt, VetComp, Info1, Info2, Info3, Info4, Info5, Info6, DocIvaCod, Divisa, Cambio, 
	CambioDta, CntRegMod, CntRegDta, CntRegDtaIva MagMovMod, MagMovMod2, MagMovDta, NumCod, Numero, Uniq, Uniq2, RecCreate, RecUserID, RecCompany, RecAgency, RecLocked, RecPrinted, RecType, RecElabID, RecValue
	)
VALUES (
	{DocTip}, '{DocNum}', '{DocDta}', '{DocOra}', {DocKind}, {DocStatus}, {AnaType}, '{AnaCod}', '{AnaCodFrom}', '{DsmCod}', '{MndCod}', '{ForDocNum}', '{ForDocDta}', '{VsRif}', '{NsRif}', '{NumExt}', '{DocRif}', '{Info}', '{SendDta}', '{SendWay}', '{SendInfo}', '{CnsDta}', {CnsWeek}, '{CnsInfo}', {DocTot}, {DocImp}, {DocIva}, 
	{DocOmg}, {DocMerce}, {DocSconti}, {DocSpese}, '{PagCod}', '{PagStart}', '{AgeCod}', '{PrvSplitCod}', {PrvFix}, {PrvTot}, '{LstCod}', '{LstSconti}', '{ShipPayCod}', '{ShipCod}', '{VetCod}', '{VetCod2}', {SctTotPc}, {SctTot}, {SctPagPc}, {SctPag}, {SpImballo}, {SpTra}, {SpRiba}, {SpBolli}, 
	{SpVarie}, '{Lotto}', {Fornitura}, {RapUniq}, {Packing}, {TrMezzo}, {TrPorto}, {Colli}, '{EmiCau}', '{AspBeni}', '{Imballo}', {Peso}, {PesoNetto}, {Volume}, '{DtaRitM}', '{OraRitM}', {SegueFt}, {VetComp}, '{Info1}', '{Info2}', '{Info3}', '{Info4}', '{Info5}', '{Info6}', '{DocIvaCod}', '{Divisa}', {Cambio}, 
	'{CambioDta}', '{CntRegMod}', '{CntRegDta}', '{CntRegDtaIva}', '{MagMovMod}', '{MagMovMod2}', '{MagMovDta}', '{NumCod}', {Numero}, {Uniq}, {Uniq2}, '{RecCreate}', {RecUserID}, {RecCompany}, {RecAgency}, {RecLocked}, {RecPrinted}, {RecType}, {RecElabID}, {RecValue}
	)
INSERT dbo.[CliDocEx_Pers](
	CaPre, Uniq, Tecnico, DtaTecnico, DtaScadenza
	)
VALUES (
	{CaPre},
	{Uniq},
	{Tecnico},
	'{DtaTecnico}',
	'{DtaScadenza}'
	)
]]>
</insertcommand>

Nome dati:
CliDoc

-------------------------------------------------------------------------------------------------------------------------
Modulo VenditeDoc. Indice 1. DB_PERS. BpSPITGEST.
-------------------------------------------------------------------------------------------------------------------------
Pers: 1

SQL:
%
Dim Year1 = FormInfoGet("Year1", 0)
Dim Year2 = FormInfoGet("Year2", 0)
Dim iUserID = DbRead("Select dbo.[udfSysUserID](" & AppInfoGet("session") & ")")
Dim sListTecnici$ = DbRead("Select ItemUsers from dbo.[UserGrp] Where ItemID = 'TECNICO'", "ItemUsers")
[SQL]
SELECT '' As buttonPlus, '' As buttonOpen, CASE WHEN ISNULL((SELECT TOP 1 1 FROM dbo.[CliOrdLin] WHERE LinStat >= 30 And UniqDoc = A.Uniq),0) = 1 THEN 'FATTURATO' ELSE CASE WHEN ISNULL((SELECT TOP 1 1 FROM dbo.[Attach] WHERE DocTip = 11 And DocID = A.Uniq),0) = 1 THEN 'ESEGUITO' ELSE 'ASSEGNATO' END END As stato, A.*
FROM dbo.[uvwCliOrd] A
Left Join dbo.[CliOrdEx_Pers] B On B.Uniq = A.Uniq
WHERE (1=1)
	And (DocYear BETWEEN {@Year1} And {@Year2})
	And ({@iUserID} Not In(Select Token From dbo.[udfStrSplit]('{@sListTecnici$}', ',')) Or (IsNull(B.Tecnico,'') = {@iUserID} And IsNull(B.DtaTecnico,'01/01/3000') <= GETDATE()))
ORDER BY DocYear DESC, NumCod, Numero DESC
[/SQL]

-------------------------------------------------------------------------------------------------------------------------
Modulo di dialogo 101.
-------------------------------------------------------------------------------------------------------------------------
Pers: 1

Script OnOpen:
DOPO:
DataVisible((DocTip = 16), "DocKind")

AGGIUNGERE:
'PERS M2SISTEMI Elia
DataVisible(AppInfoGet("datacustom") = "BpSPITGEST" And ((DocTip = 11) Or (DocTip = 13)), "Tecnico,DtaTecnico$,DtaScadenza$")

-------------------------------------------------------------------------------------------------------------------------
Modulo di dialogo 101. Dettaglio campi 30
-------------------------------------------------------------------------------------------------------------------------
Nullo: 1
Bloccato: 1
No bordi: 1
Stile riga: WhiteSmoke

-------------------------------------------------------------------------------------------------------------------------
Modulo di dialogo 101. Dettaglio campi 31
-------------------------------------------------------------------------------------------------------------------------
Descrizione: Tecnico
T.Edit: 20
Nullo: 1
Script QTable: ShowQT UserAnaTecnici
Variabile: Tecnico

-------------------------------------------------------------------------------------------------------------------------
Modulo di dialogo 101. Dettaglio campi 32
-------------------------------------------------------------------------------------------------------------------------
Descrizione: Visibile al tecnico dal...
T.Edit: 10
Nullo: 1
Variabile: DtaTecnico$

-------------------------------------------------------------------------------------------------------------------------
Modulo di dialogo 101. Dettaglio campi 40
-------------------------------------------------------------------------------------------------------------------------
Nullo: 1
Bloccato: 1
No bordi: 1
Stile riga: WhiteSmoke

-------------------------------------------------------------------------------------------------------------------------
Modulo di dialogo 101. Dettaglio campi 41
-------------------------------------------------------------------------------------------------------------------------
Descrizione: Data di scadenza
T.Edit: 10
Nullo: 1
Variabile: DtaScadenza$