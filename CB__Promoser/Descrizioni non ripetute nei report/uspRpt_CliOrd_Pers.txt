/*
*
*	Genera recordset per report da tabella CliOrd
*
*	@iDocUniq: numero unico del documento
*
*	@sRtpFlags: eventuale stringa di specifiche separate da virgola per modificare il comportamento della procedura
*			"NP, TP, ROWS:LinNum1;LinNum2 ... LinNumN"
*			NP: modalitÃ  di estrazione dei parametri associati alla riga di dettaglio
*				 	-1  non ritorna alcun parametro.
*				 	 0  ritorna i primi 4 parametri (ParID = 1-4) su singola riga.
*					>0  ritorna i primi N parametri (ParID = 1-N) uno per riga.
*					NOTA: impostare un valore alto, ad esempio 100, per estrarre tutti i parametri.
*		  				  i parametri vengono concatenati alla descrizione del prodotto.
*			TP: se "1" imposta @iUseParText = 1, ritorna i parametri con decodifica
*			-- PERSONALIZZAZIONE M2SISTEMI: se "2" imposta @iUseParText = 2, ritorna i parametri con decodifica senza codice
*
*	NOTA: @iRptPrdParams ed @sRtpFlags vengono ritornati come campi per renderli disponibili all'interno del report
*/
CREATE PROCEDURE [uspRpt_CliOrd_Pers]
	@iSession int,
	@iDocUniq int,
	@sRtpFlags varchar(128)
AS
SET NOCOUNT ON

-- HEADER (intestazione pagina, stampata su tutte le pagine)
-- FOOTER (piede pagina, stampato su tutte le pagine)
-- HEAD (informazioni, incipit, stampato sulla prima pagina)
-- BODY (testo accodato all'ultima riga di dettaglio stampata)
Declare @sRPT_HEADER varchar(MAX)
Declare @sRPT_FOOTER varchar(MAX)
Declare @sRPT_BODY varchar(MAX)
Declare @sRPT_TEXT varchar(MAX)
Declare @sRPT_ADVICE nvarchar(MAX)

Declare @iDocTip tinyint
Declare @sDocNum varchar(32)
Declare @tDocDta date

Declare @iAnaType tinyint
Declare @sAnaCod varchar(16)

Declare @sDsmCod varchar(16)
Declare @sDstDoc varchar(16)
Declare @sPagCod varchar(16)
Declare @sShipCod varchar(8)
Declare @sLstCod varchar(32)
Declare @sLstInfo varchar(128)
Declare @sBanCod varchar(16)
Declare @sAZI_BanBB varchar(128)

Declare @iCntMovType tinyint
Declare @sPayString1 varchar(2048) = ''
Declare @sPayString2 varchar(2048) = ''

--  intestazione documento (anagrafica cli/for)
Declare @sANA_ItemDes nvarchar(256)
Declare @sANA_Ind nvarchar(256)
Declare @sANA_Cap varchar(16)
Declare @sANA_Loc nvarchar(128)
Declare @sANA_Pro varchar(16)
Declare @sANA_Reg varchar(32)
Declare @sANA_Naz varchar(32)
Declare @sANA_Where varchar(512)

Declare @sANA_Tel1 varchar(32)
Declare @sANA_Tel2 varchar(32)
Declare @sANA_Tel3 varchar(32)
Declare @sANA_Email varchar(128)
Declare @sANA_WhoName varchar(64)

--  destinazione merce
Declare @sDSM_ItemDes nvarchar(256)
Declare @sDSM_Ind nvarchar(256)
Declare @sDSM_Cap varchar(16)
Declare @sDSM_Loc nvarchar(128)
Declare @sDSM_Pro varchar(16)
Declare @sDSM_Reg varchar(32)
Declare @sDSM_Naz varchar(32)
Declare @sDSM_Where varchar(512)

--  destinazione documento
Declare @sDSD_ItemDes nvarchar(256)
Declare @sDSD_Ind nvarchar(256)
Declare @sDSD_Cap varchar(16)
Declare @sDSD_Loc nvarchar(128)
Declare @sDSD_Pro varchar(16)
Declare @sDSD_Reg varchar(32)
Declare @sDSD_Naz varchar(32)
Declare @sDSD_Where varchar(512)

--  vettore
Declare @sVetCod varchar(16)
Declare @sVET_ItemDes nvarchar(256)
Declare @sVET_Ind nvarchar(256)
Declare @sVET_Cap varchar(16)
Declare @sVET_Loc nvarchar(128)
Declare @sVET_Pro varchar(16)
Declare @sVET_PIva varchar(16)
Declare @sVET_NumCCIAA varchar(16)
Declare @sVET_NumDitte varchar(16)
Declare @sVET_NumAlbo varchar(16)
Declare @sVET_Where varchar(512)

-- sessione
Declare @sSessionInfo varchar(256)

-- altro
Declare @sCrLf char(2) = Char(13) + Char(10)
Declare @iRptPrdParams smallint
--INIZIO PERS M2SISTEMI
--Declare @bUseParText bit = 0
Declare @iUseParText tinyint = 0
--FINE PERS M2SISTEMI

-- filtro su righe
Declare @tbLinNums TABLE([LinNum] smallint NULL)

Set @iRptPrdParams = IsNull(@iRptPrdParams, 0)
Set @sRtpFlags = IsNull(@sRtpFlags, '')

-- ----------------------------------------------------
Insert @tbLinNums(LinNum)
Select LinNum
From dbo.[CliOrdLin]
Where UniqDoc = @iDocUniq

-- ----------------------------------------------------
If @sRtpFlags <> ''
Begin
	Set @iRptPrdParams = dbo.[udfC_SmallInt](dbo.[udfStrTokenN](@sRtpFlags, 1, ','))

	If dbo.[udfStrTokenN](@sRtpFlags, 2, ',') = '1'
		Set @iUseParText = 1
	--INIZIO PERS M2SISTEMI
	Else If dbo.[udfStrTokenN](@sRtpFlags, 2, ',') = '2'
		Set @iUseParText = 2
	--FINE PERS M2SISTEMI

	-- If dbo.[udfStrTokenN](@sRtpFlags, 3, ',') = 'ROWS:'
	If CHARINDEX('ROWS:', @sRtpFlags) > 0
	Begin
		Declare @sRows varchar(128) = dbo.[udfStrTokenN](@sRtpFlags, 2, ':')

		Delete @tbLinNums

		Insert @tbLinNums(LinNum)
		Select dbo.[udfC_Int](Token)
		From dbo.[udfStrSplit](@sRows, ';')
	End
End

-- --------------------------------------------
-- Sessione
Select
	@sSessionInfo =
		Left(convert(varchar(32), GetDate(), 113), 20)
		+ ' - ' + dbo.[udfSysDbCustomID]()
		+ ' - ' + Cast(IsNull(UserID, 0) As varchar(8))
		+ ' - ' + IsNull(PcName, '')
		+ ' - ' + IsNull(ServerName, '')
From dbo.[sys_db_sessions]
Where SessionID = @iSession

-- --------------------------------------------
-- Estremi documento
Select
	@iDocTip = DocTip,
	@sDocNum = DocNum,
	@tDocDta = DocDta,
	@iAnaType = AnaType,
	@sAnaCod  = AnaCod,
	@sDsmCod = DsmCod,
	@sPagCod = PagCod,
	@sVetCod = VetCod,
	@sShipCod = ShipCod,
	@sLstCod = LstCod
From dbo.[CliOrd]
Where Uniq = @iDocUniq

-- ------------------------------------------
-- HEADER, FOOTER, BODY, TEXT
Set @sRPT_HEADER = dbo.[udfRpt_AreaText](@iSession, 'HEADER', '', @iDocTip, @iAnaType, @sAnaCod)
Set @sRPT_FOOTER = dbo.[udfRpt_AreaText](@iSession, 'FOOTER', '', @iDocTip, @iAnaType, @sAnaCod)
Set @sRPT_BODY = dbo.[udfRpt_AreaText](@iSession, 'BODY', '', @iDocTip, @iAnaType, @sAnaCod)
Set @sRPT_TEXT = dbo.[udfRpt_AreaText](@iSession, 'TEXT', '', @iDocTip, @iAnaType, @sAnaCod)
Set @sRPT_ADVICE = dbo.[udfRpt_Advice](@iSession, @iDocTip, @tDocDta, @iAnaType, @sAnaCod)

Set @sRPT_BODY = IsNull(@sRPT_BODY, '')
Set @sRPT_ADVICE = IsNull(@sRPT_ADVICE, '')

If @sRPT_BODY = ''
	Set @sRPT_BODY = @sRPT_ADVICE

-- ------------------------------------------
-- Listino
--
Select @sLstInfo = Left(ItemInfo, 128)
From dbo.[PrdPrzAna]
Where ItemID = @sLstCod

-- ------------------------------------------
-- Banca per B.B.
--
Set @sBanCod = ''
Set @sAZI_BanBB = ''

Select @sBanCod = BanCod
From dbo.[MixAna]
Where ItemType = @iAnaType
	And ItemID = @sAnaCod

Set @sBanCod = IsNull(@sBanCod, '')
If @sBanCod = ''
Begin
	Select @sBanCod = BanCodBB
	From dbo.[PagTab]
	Where ItemID = @sPagCod
End

Set @sBanCod = IsNull(@sBanCod, '')
If @sBanCod = ''
Begin
	Select @sBanCod = ItemID
	From dbo.[MixAna]
	Where ItemType = 3
		And IsNull(ItemUse, 0) = 20
End

Set @sBanCod = IsNull(@sBanCod, '')
If @sBanCod <> ''
Begin
	Select @sAZI_BanBB = Case When IsNull(BanIBAN, '') <> '' Then 'IBAN: ' + IsNull(BanIBAN, '') Else 'IBAN ASSENTE' End
						+ Case When IsNull(BanBIC, '') <> '' Then ' - BIC/SWIFT: ' + IsNull(BanBIC, '') Else '' End
	From dbo.[MixAna]
	Where ItemID = @sBanCod
		And ItemType = 3

	Set @sAZI_BanBB = LTrim(RTrim(@sAZI_BanBB))
End


-- ------------------------------------------
-- Scadenze
--
Execute dbo.[uspRpt_CntPay] @iSession, @iDocTip, @iDocUniq, @sPayString1 OUTPUT, @sPayString2 OUTPUT
-- ------------------------------------------


-- ------------------------------------------
-- Intestazione documento (anagrafica cli/for)
--

Select
	@sANA_ItemDes = ItemDes,
	@sANA_Ind = Ind,
	@sANA_Cap = Cap,
	@sANA_Loc = Loc,
	@sANA_Pro = Pro,
	@sANA_Reg = Reg,
	@sANA_Naz = Naz
From dbo.[MixAna]
Where ItemType = @iAnaType
	And ItemID = @sAnaCod

Set @sANA_Where = LTrim(
			IsNull(@sANA_Cap, '') + ' ' + IsNull(@sANA_Loc, '')
			+ CASE When IsNull(@sANA_Pro, '') = ''
					Then ''
					Else ' (' + @sANA_Pro + ')'
					End
			)

Select TOP 1
	@sANA_Tel1 = Tel1,
	@sANA_Tel2 = Tel2,
	@sANA_Tel3 = Tel3,
	@sANA_Email = MailAddress,
	@sANA_WhoName = WhoName
From dbo.[MixAnaRif]
Where ItemID = @sAnaCod
	And ItemType = @iAnaType
Order By IsNull(ItemDefault, 0) DESC
-- ------------------------------------------
-- Destinazione MERCE
--
Set @sDsmCod = IsNull(@sDsmCod, '')
If @sDsmCod <> ''
BEGIN
	Select
		@sDSM_ItemDes = ItemDes,
		@sDSM_Ind = Ind,
		@sDSM_Cap = Cap,
		@sDSM_Loc = Loc,
		@sDSM_Pro = Pro,
		@sDSM_Reg = Reg,
		@sDSM_Naz = Naz
	From dbo.[MixAnaSedi]
	Where ItemType = @iAnaType
		And ItemID = @sAnaCod
		And ItemIDSede = @sDsmCod

	Set @sDSM_Where = LTrim(
				IsNull(@sDSM_Cap, '') + ' ' + IsNull(@sDSM_Loc, '')
				+ CASE When IsNull(@sDSM_Pro, '') = ''
						Then ''
						Else ' (' + @sDSM_Pro + ')'
						End
				)
END

--------Set @bFound = IsNull(@bFound, 0)
--------If @bFound = 0
--------Begin
--------	Set @sDSM_ItemDes = @sANA_ItemDes
--------	Set @sDSM_Ind = @sANA_Ind
--------	Set @sDSM_Cap = @sANA_Cap
--------	Set @sDSM_Loc = @sANA_Loc
--------	Set @sDSM_Pro = @sANA_Pro
--------	Set @sDSM_Reg = @sANA_Reg
--------	Set @sDSM_Naz = @sANA_Naz
--------	Set @sDSM_Where = @sANA_Where
--------End

-- ------------------------------------------
-- Destinazione DOCUMENTO
--
Set @sDstDoc = dbo.[udfDD_DstDoc](@iDocTip, @sDocNum, @iAnaType, @sAnaCod)
If @sDstDoc <> ''
BEGIN
	Select
		@sDSD_ItemDes = ItemDes,
		@sDSD_Ind = Ind,
		@sDSD_Cap = Cap,
		@sDSD_Loc = Loc,
		@sDSD_Pro = Pro,
		@sDSD_Reg = Reg,
		@sDSD_Naz = Naz
	From dbo.[MixAnaSedi]
	Where ItemType = @iAnaType
		And ItemID = @sAnaCod
		And ItemIDSede = @sDstDoc

	Set @sDSD_Where = LTrim(
				IsNull(@sDSD_Cap, '') + ' ' + IsNull(@sDSD_Loc, '')
				+ CASE When IsNull(@sDSD_Pro, '') = ''
						Then ''
						Else ' (' + @sDSD_Pro + ')'
						End
				)
END


-- ------------------------------------------
-- dati VETTORE
Set @sVetCod = IsNull(@sVetCod, '')
If @sVetCod <> ''
Begin
	Select
		  @sVET_ItemDes = ItemDes
		, @sVET_Ind = Ind
		, @sVET_Cap = Cap
		, @sVET_Loc = Loc
		, @sVET_Pro = Pro
		, @sVET_PIva = PIva
		, @sVET_NumCCIAA = NumCCIAA
		, @sVET_NumDitte = NumDitte
		, @sVET_NumAlbo = NumAlbo
	From dbo.[MixAna]
	Where ItemID = @sVetCod
		And ItemType = 2

	Set @sVET_Where = LTrim(
				IsNull(@sVET_Cap, '') + ' ' + IsNull(@sVET_Loc, '')
				+ CASE When IsNull(@sVET_Pro, '') = ''
						Then ''
						Else ' (' + @sVET_Pro + ')'
						End
				)

End


-- ------------------------------------------

Select
	@iRptPrdParams As RptPrdParams,
	@iUseParText As UseParText,
	@sRtpFlags As RtpFlags,

	@sSessionInfo As SESSION_Info,

	-- *******************************************
	-- DETTAGLIO MERCE
	-- *******************************************

	LIN.Uniq As LIN_UniqLin,
	LIN.LinNum As LIN_LinNum,
	LIN.LinOmg As LIN_LinOmg,
	LIN.PrdCod As LIN_PrdCod,
	LIN.PrdCod2 As LIN_PrdCod2,

	LIN.PrdSerial As LIN_PrdSerial,
	LIN.PrdLotto As LIN_PrdLotto,
	'LIN_PrdDtaCns' = dbo.[udfRpt_FormatDate](Case When LIN.PrdDtaCns IS NULL Then DOC.CnsDta Else LIN.PrdDtaCns End),

	-- LIN.PrdParams As LIN_PrdParams,
	-- @iRptPrdParams: modalitÃ  di estrazione dei parametri associati alla riga di dettaglio
	-- 			-1  non ritorna alcun parametro
	-- 			 0  ritorna i primi 4 parametri (ParID = 1-4)
	-- 			>0  ritorna i primi N parametri (ParID = 1-N)

	-- 'LIN_PrdParams' = dbo.[udfRpt_PrdParams](@iDocTip, LIN.Uniq, @iRptPrdParams, @bUseParText),

	'LIN_PrdDes' = CASE
					--INIZIO PERS M2SISTEMI
					WHEN @iRptPrdParams = -1 Or (
						@iRptPrdParams > 0 And
						(
						SELECT Top 1 LIN2.LinNum
						FROM dbo.[CliOrdLin] LIN2
						WHERE 
							LIN.PrdDes + @sCrLf + dbo.[udfRpt_PrdParams_Pers](@iDocTip, LIN.Uniq, @iRptPrdParams, @iUseParText) =
							LIN2.PrdDes + @sCrLf + dbo.[udfRpt_PrdParams_Pers](@iDocTip, LIN2.Uniq, @iRptPrdParams, @iUseParText)
						ORDER BY LIN2.PrdQta DESC, LIN2.LinNum DESC
						) <> LIN.LinNum
						) THEN
					--FINE PERS M2SISTEMI
						LIN.PrdDes
					WHEN @iRptPrdParams = 0 THEN
						Case
						When IsNull(LIN.PrdParams, '') <> ''
						Then LIN.PrdDes + @sCrLf + LIN.PrdParams
						Else LIN.PrdDes
						End
					WHEN @iRptPrdParams > 0 THEN
						--INIZIO PERS M2SISTEMI
						--LIN.PrdDes + @sCrLf + dbo.[udfRpt_PrdParams](@iDocTip, LIN.Uniq, @iRptPrdParams, @bUseParText)
						LIN.PrdDes + @sCrLf + dbo.[udfRpt_PrdParams_Pers](@iDocTip, LIN.Uniq, @iRptPrdParams, @iUseParText)
						--FINE PERS M2SISTEMI
					END,

	LIN.PrdUm2 As LIN_PrdUm2,
	dbo.[udfRpt_Format](LIN.QtaUm2, 'QV*') As LIN_QtaUm2,

	'LIN_CnfQta' = Case
					When IsNull(LIN.QtaUm2, 0) = 0 Then ''
					Else dbo.[udfRpt_Format](LIN.PrdQta / Case When IsNull(LIN.QtaUm2, 0)= 0 Then 1 Else LIN.QtaUm2 End, 'QV*')
					End,
	'LIN_CnfDes' = Case
					When IsNull(LIN.QtaUm2, 0) = 0 Then ''
					Else LTrim(Str(LIN.QtaUm2, 5, 0))
						+ ' da ' + dbo.[udfRpt_Format](LIN.PrdQta / Case When IsNull(LIN.QtaUm2, 0)= 0 Then 1 Else LIN.QtaUm2 End, 'QV*')
					End,

	LIN.PrdUm As LIN_PrdUm,
	dbo.[udfRpt_Format](LIN.PrdQta, 'QV*') As LIN_PrdQta,
	dbo.[udfRpt_Format](LIN.PrdPrz, 'PV*') As LIN_PrdPrz,
	LIN.PrdSc As LIN_PrdSc,
	dbo.[udfRpt_Format](LIN.PrdPrz2, 'PV*') As LIN_PrdPrz2,
	dbo.[udfRpt_Format](LIN.PrdAdd, 'PV*') As LIN_PrdAdd,
	dbo.[udfRpt_Format](LIN.TotPrz2, 'PV*') As LIN_TotPrz2,

	'LIN_PriceX' = Case LIN.PrdUso When 22 Then '*' When 23 Then '**' Else '' End,

	LIN.LinRif As LIN_LinRif,
	LIN.LinType As LIN_LinType,

	--LIN.IvaCod As LIN_IvaCod,
	Case When dbo.[udfIvaCod_TIPO](LIN.IvaCod) <> 0
		Then (Case When IsNull(DOC.DocIvaCod, '') = '' Then LIN.IvaCod Else DOC.DocIvaCod End)
	Else LIN.IvaCod End As LIN_IvaCod,
	--LIN.IvaAlq As LIN_IvaAlq,
	Case When dbo.[udfIvaCod_TIPO](LIN.IvaCod) <> 0
		Then (Case When IsNull(DOC.DocIvaCod, '') = '' Then LIN.IvaAlq Else dbo.[udfIvaCod_ALQ](DOC.DocIvaCod) End)
	Else LIN.IvaAlq End As LIN_IvaAlq,

	LIN.TotPrz As LIN_TotPrz,
	LIN.Info As LIN_Info,
	LIN.InfoExt As LIN_InfoExt,
	LIN.Tm As LIN_Tm,
	LIN.TmCalc As LIN_TmCalc,

	-- derivati da PrdAna
	PRD.MadeCod As LIN_MadeCod,
	PRD.DogCod As LIN_DogCod,

	-- *******************************************
	-- TESTATA DOCUMENTO
	-- *******************************************
	DOC.DocTip As DOC_DocTip,
	dbo.[udfDocTip_DocSigla](DOC.DocTip) As DOC_DocSigla,
	dbo.[udfDocTip_DocDes](0, DOC.DocTip, '', '') As DOC_DocDES,
	DOC.DocNum As DOC_DocNum,
	dbo.[udfRpt_FormatDate](DOC.DocDta) As DOC_DocDta,
	DOC.DocOra As DOC_DocOra,
	DOC.AnaType As DOC_AnaType,
	DOC.AnaCod As DOC_AnaCod,
	DOC.AnaCodFrom As DOC_AnaCodFrom,

	DOC.DsmCod As DOC_DsmCod,

	DOC.ForDocNum As DOC_ForDocNum,
	dbo.[udfRpt_FormatDate](DOC.ForDocDta) As DOC_ForDocDta,
	DOC.VsRif As DOC_VsRif,
	DOC.NsRif As DOC_NsRif,
	DOC.NumExt As DOC_NumExt,
	DOC.DocRif As DOC_DocRif,
	DOC.Info As DOC_Info,

	dbo.[udfRpt_Format](DOC.DocMerce, 'TV*') As DOC_DocMerce,
	dbo.[udfRpt_Format](DOC.DocSconti, 'TV*') As DOC_DocSconti,
	dbo.[udfRpt_Format](DOC.DocSpese, 'TV*') As DOC_DocSpese,
	dbo.[udfRpt_Format](DOC.DocImp, 'TV') As DOC_DocImp,
	dbo.[udfRpt_Format](DOC.DocIva, 'TV') As DOC_DocIva,
	dbo.[udfRpt_Format](DOC.DocOmg, 'TV*') As DOC_DocOmg,
	dbo.[udfRpt_Format](DOC.DocTot, 'TV') As DOC_DocTot,

	DOC.PagCod As DOC_PagCod, dbo.[udfPagTab_DES](DOC.PagCod) As DOC_PagDES,
	DOC.AgeCod As DOC_AgeCod, dbo.[udfMixAna_DES](0, 2, DOC.AgeCod) As DOC_AgeDES,
	DOC.PrvSplitCod As DOC_PrvSplitCod,
	DOC.PrvFix As DOC_PrvFix,
	DOC.PrvTot As DOC_PrvTot,

	@sLstCod As DOC_LstCod,
	@sLstInfo As DOC_LstInfo,

	DOC.LstSconti As DOC_LstSconti,
	DOC.ShipPayCod As DOC_ShipPayCod,
	DOC.ShipCod As DOC_ShipCod, dbo.[udfShipWhere_DES](DOC.ShipCod) As DOC_ShipCodDES,

	dbo.[udfRpt_Format](DOC.SctTotPc, '2*') As DOC_SctTotPc,
	dbo.[udfRpt_Format](DOC.SctTot, 'TV*') As DOC_SctTot,
	dbo.[udfRpt_Format](DOC.SctPagPc, '2*') As DOC_SctPagPc,
	dbo.[udfRpt_Format](DOC.SctPag, 'TV*') As DOC_SctPag,
	dbo.[udfRpt_Format](DOC.SpImballo, 'TV*') As DOC_SpImballo,
	dbo.[udfRpt_Format](DOC.SpTra, 'TV*') As DOC_SpTra,
	dbo.[udfRpt_Format](DOC.SpRiba, 'TV*') As DOC_SpRiba,
	dbo.[udfRpt_Format](DOC.SpBolli, 'TV*') As DOC_SpBolli,
	dbo.[udfRpt_Format](DOC.SpVarie, 'TV*') As DOC_SpVarie,

	DOC.Lotto As DOC_Lotto,
	DOC.Fornitura As DOC_Fornitura,
	DOC.RapUniq As DOC_RapUniq,
	DOC.Packing As DOC_Packing,
	dbo.[udfRpt_FormatDate](DOC.CnsDta) As DOC_CnsDta,
	DOC.CnsInfo As DOC_CnsInfo,

	dbo.[udfRpt_FormatDate](DOC.SendDta) As DOC_SendDta,
	DOC.SendWay As DOC_SendWay,
	DOC.SendInfo As DOC_SendInfo,

	DOC.TrMezzo As DOC_TrMezzo, dbo.[udfSystemValues_value_lang](ANA.Language, 'TrMezzo', DOC.TrMezzo) As DOC_TrMezzoDES,
	DOC.TrPorto As DOC_TrPorto, dbo.[udfSystemValues_value_lang](ANA.Language, 'TrPortoType', DOC.TrPorto) As DOC_TrPortoDES,
	DOC.Colli As DOC_Colli,
	DOC.EmiCau As DOC_EmiCau,
	DOC.AspBeni As DOC_AspBeni,
	DOC.Imballo As DOC_Imballo, dbo.[udfMixTab_DES]('DocImballo', '', DOC.Imballo) As DOC_ImballoDES,

	dbo.[udfRpt_Format](DOC.Peso, '2') As DOC_Peso,
	dbo.[udfRpt_Format](DOC.PesoNetto, '2') As DOC_PesoNetto,
	dbo.[udfRpt_Format](DOC.Volume, '2') As DOC_Volume,

	dbo.[udfRpt_FormatDate](DOC.DtaRitM) As DOC_DtaRitM,
	DOC.OraRitM As DOC_OraRitM,

	DOC.Info1 As DOC_Info1,
	DOC.Info2 As DOC_Info2,
	DOC.Info3 As DOC_Info3,
	DOC.Info4 As DOC_Info4,
	DOC.Info5 As DOC_Info5,
	DOC.Info6 As DOC_Info6,

	DOC.DocIvaCod As DOC_DocIvaCod,
	DOC.Divisa As DOC_Divisa,
	DOC.Cambio As DOC_Cambio,
	DOC.Numero As DOC_Numero,
	DOC.Uniq As DOC_Uniq,

	DOC.RecCreate As DOC_RecCreate,
	DOC.RecUserID As DOC_RecUserID,

	-- *******************************************
	-- SCADENZE
	-- *******************************************
	@sPayString1 As DOC_PayString1,
	@sPayString2 As DOC_PayString2,

	-- *******************************************
	-- ANAGRAFICA
	-- *******************************************
	--
	-- INTESTAZIONE DOCUMENTO
	--
	ANA.ItemID As ANA_ItemID,
	@sANA_ItemDes As ANA_ItemDes,
	@sANA_Ind As ANA_Ind,
	@sANA_Cap As ANA_Cap,
	@sANA_Loc As ANA_Loc,
	@sANA_Pro As ANA_Pro,
	@sANA_Reg As ANA_Reg,
	@sANA_Naz As ANA_Naz,
	@sANA_Where As ANA_Where,

	@sANA_Tel1 As ANA_Tel1,
	@sANA_Tel2 As ANA_Tel2,
	@sANA_Tel3 As ANA_Tel3,
	@sANA_Email As ANA_Email,
	@sANA_WhoName As ANA_WhoName,

	ANA.PIva As ANA_PIva,
	ANA.CFis As ANA_CFis,

	ANA.CatCod As ANA_CatCod,

	ANA.AerCod As ANA_AerCod,
	ANA.TrImballo As ANA_TrImballo, dbo.[udfMixTab_DES]('DocImballo', '', ANA.TrImballo) As ANA_TrImballoDES,
	ANA.TrFDeposito As ANA_TrFDeposito,

	ANA.Banca As ANA_Banca,
	ANA.BanIBAN As ANA_BanIBAN,

	--
	-- DESTINAZIONE MERCE
	--
	@sDSM_ItemDes As DSM_ItemDes,
	@sDSM_Ind As DSM_Ind,
	@sDSM_Cap As DSM_Cap,
	@sDSM_Loc As DSM_Loc,
	@sDSM_Pro As DSM_Pro,
	@sDSM_Reg As DSM_Reg,
	@sDSM_Naz As DSM_Naz,
	@sDSM_Where As DSM_Where,

	--
	-- DESTINAZIONE DOCUMENTO
	--
	@sDSD_ItemDes As DSD_ItemDes,
	@sDSD_Ind As DSD_Ind,
	@sDSD_Cap As DSD_Cap,
	@sDSD_Loc As DSD_Loc,
	@sDSD_Pro As DSD_Pro,
	@sDSD_Reg As DSD_Reg,
	@sDSD_Naz As DSD_Naz,
	@sDSD_Where As DSD_Where,

	--
	-- VETTORE
	--
	@sVetCod As DOC_VetCod,
	@sVET_ItemDes As DOC_VetDES,
	@sVET_Ind As DOC_VET_Ind,
	@sVET_Cap As DOC_VET_Cap,
	@sVET_Loc As DOC_VET_Loc,
	@sVET_Pro As DOC_VET_Pro,
	@sVET_Where As DOC_VET_Where,
	@sVET_PIva As DOC_VET_PIva,
	@sVET_NumCCIAA As DOC_VET_NumCCIAA,
	@sVET_NumDitte As DOC_VET_NumDitte,
	@sVET_NumAlbo As DOC_VET_NumAlbo,

	DOC.VetCod2 As DOC_VetCod2
	, dbo.[udfMixAna_DES](0, 2, DOC.VetCod2) As Doc_Vet2DES,


	-- *******************************************
	-- AZIENDA
	-- *******************************************
	@sAZI_BanBB As AZI_BanBB,

	-- *******************************************
	-- TESTI PER AREE DI STAMPA
	-- *******************************************
	'' As DOC_DocCntInfo,

	@sRPT_HEADER As RPT_HEADER,
	@sRPT_FOOTER As RPT_FOOTER,
	@sRPT_BODY As RPT_BODY,
	@sRPT_TEXT As RPT_TEXT

From dbo.[CliOrdLin] LIN
Left Join dbo.[CliOrd] DOC On DOC.Uniq = @iDocUniq
-- -------- Left Join dbo.[MixAna] AZI On AZI.ItemType = 50
Left Join dbo.[MixAna] ANA On ANA.ItemID = DOC.AnaCod And ANA.ItemType = @iAnaType
Left Join dbo.[PrdAna] PRD On PRD.PrdCod = LIN.PrdCod
Where UniqDoc = @iDocUniq
	And LinNum In(Select LinNum From @tbLinNums)
--INIZIO PERS M2SISTEMI
Order By LIN.LinNum
--Order By LIN_PrdCod ASC, LIN_PrdDes ASC, LIN_PrdQta ASC, LIN.LinNum ASC
--FINE PERS M2SISTEMI